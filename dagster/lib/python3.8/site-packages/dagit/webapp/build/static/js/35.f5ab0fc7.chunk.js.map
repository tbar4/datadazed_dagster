{"version":3,"file":"static/js/35.f5ab0fc7.chunk.js","mappings":"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","sources":["../../core/src/assets/AssetNodeList.tsx","../../core/src/assets/AssetNodeDefinition.tsx","../../core/src/assets/AssetNodeInstigatorTag.tsx","../../core/src/assets/AssetNodeLineageGraph.tsx","../../core/src/assets/AssetNodeLineage.tsx","../../core/src/assets/AssetView.tsx","../../core/src/runs/LogsToolbar.tsx","../../core/src/assets/AssetsCatalogRoot.tsx","../../core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","../../core/src/runs/ComputeLogContent.tsx","../../core/src/runs/useComputeLogs.tsx","../../core/src/runs/ComputeLogPanel.tsx","../../core/src/runs/LogsProvider.tsx","../../core/src/ui/formatters.tsx","../../core/src/runs/ExecutionStateDot.tsx","../../core/src/runs/LogsFilterInput.tsx","../../ui/src/components/useSuggestionsForString.tsx","../../core/src/runs/useQueryPersistedLogFilter.ts","../../core/src/runs/Run.tsx","../../core/src/hooks/useFavicon.tsx","../../core/src/runs/RunRoot.tsx","../../core/src/runs/RunListTabs.tsx","../../core/src/runs/RunsRoot.tsx","../../core/src/runs/ScheduledRunListRoot.tsx","../../core/src/snapshots/SnapshotNav.tsx","../../core/src/snapshots/SnapshotRoot.tsx","../../core/src/instance/InstanceBackfills.tsx","../../core/src/instance/InstanceConfig.tsx","../../core/src/instance/InstanceHealthPage.tsx","../../core/src/instance/InstanceOverviewPage.tsx","../../core/src/instance/InstanceSchedules.tsx","../../core/src/instance/InstanceSensors.tsx","../../core/src/instance/InstanceStatusRoot.tsx","../../core/src/instance/InstanceRoot.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../../node_modules/anser/lib/index.js","../../../node_modules/ansi-to-react/lib/index.js","../../../node_modules/escape-carriage/index.js","../../../node_modules/lodash/partition.js","../../../node_modules/lodash/throttle.js"],"sourcesContent":["import {Box, Spinner} from '@dagster-io/ui';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AssetNode} from '../asset-graph/AssetNode';\nimport {LiveData, toGraphId} from '../asset-graph/Utils';\nimport {AssetGraphQuery_assetNodes} from '../asset-graph/types/AssetGraphQuery';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\nexport const AssetNodeList: React.FC<{\n  items: AssetGraphQuery_assetNodes[] | null;\n  liveDataByNode: LiveData;\n}> = ({items, liveDataByNode}) => {\n  const history = useHistory();\n\n  if (items === null) {\n    return (\n      <Container flex={{alignItems: 'center', justifyContent: 'center'}}>\n        <Spinner purpose=\"section\" />\n      </Container>\n    );\n  }\n\n  return (\n    <Container flex={{gap: 4}} padding={{horizontal: 12}}>\n      {items.map((asset) => (\n        <AssetNodeWrapper\n          key={asset.id}\n          onClick={(e) => {\n            e.stopPropagation();\n            history.push(assetDetailsPathForKey(asset.assetKey, {view: 'definition'}));\n          }}\n        >\n          <AssetNode\n            definition={asset}\n            inAssetCatalog\n            selected={false}\n            liveData={liveDataByNode[toGraphId(asset.assetKey)]}\n          />\n        </AssetNodeWrapper>\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled(Box)`\n  height: 144px;\n  overflow-x: auto;\n  width: 100%;\n  white-space: nowrap;\n`;\n\nconst AssetNodeWrapper = styled.div`\n  cursor: pointer;\n  width: 240px;\n  flex-shrink: 0;\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors, Icon, Caption, Subheading, Mono, ConfigTypeSchema} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {ASSET_NODE_FRAGMENT} from '../asset-graph/AssetNode';\nimport {\n  displayNameForAssetKey,\n  isSourceAsset,\n  LiveData,\n  isHiddenAssetGroupJob,\n  __ASSET_JOB_PREFIX,\n} from '../asset-graph/Utils';\nimport {AssetGraphQuery_assetNodes} from '../asset-graph/types/AssetGraphQuery';\nimport {DagsterTypeSummary} from '../dagstertype/DagsterType';\nimport {Description} from '../pipelines/Description';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ASSET_NODE_CONFIG_FRAGMENT} from './AssetConfig';\nimport {AssetDefinedInMultipleReposNotice} from './AssetDefinedInMultipleReposNotice';\nimport {\n  AssetMetadataTable,\n  ASSET_NODE_OP_METADATA_FRAGMENT,\n  metadataForAssetNode,\n} from './AssetMetadata';\nimport {AssetNodeList} from './AssetNodeList';\nimport {PartitionHealthSummary, usePartitionHealthData} from './PartitionHealthSummary';\nimport {AssetNodeDefinitionFragment} from './types/AssetNodeDefinitionFragment';\n\nexport const AssetNodeDefinition: React.FC<{\n  assetNode: AssetNodeDefinitionFragment;\n  upstream: AssetGraphQuery_assetNodes[] | null;\n  downstream: AssetGraphQuery_assetNodes[] | null;\n  liveDataByNode: LiveData;\n}> = ({assetNode, upstream, downstream, liveDataByNode}) => {\n  const partitionHealthData = usePartitionHealthData([assetNode.assetKey]);\n  const {assetMetadata, assetType} = metadataForAssetNode(assetNode);\n\n  const assetConfigSchema = assetNode.configField?.configType;\n  const repoAddress = buildRepoAddress(\n    assetNode.repository.name,\n    assetNode.repository.location.name,\n  );\n\n  return (\n    <>\n      <AssetDefinedInMultipleReposNotice\n        assetKey={assetNode.assetKey}\n        loadedFromRepo={repoAddress}\n        padded={true}\n      />\n      <Box flex={{direction: 'row'}} style={{flex: 1}}>\n        <Box\n          style={{flex: 1, minWidth: 0}}\n          flex={{direction: 'column'}}\n          border={{side: 'right', width: 1, color: Colors.KeylineGray}}\n        >\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            flex={{justifyContent: 'space-between', gap: 8}}\n          >\n            <Subheading>Description</Subheading>\n            <DefinitionLocation assetNode={assetNode} repoAddress={repoAddress} />\n          </Box>\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            style={{flex: 1, flexBasis: 'content', flexGrow: 0, minHeight: 120}}\n          >\n            <Description\n              description={assetNode.description || 'No description provided.'}\n              maxHeight={260}\n            />\n          </Box>\n          {assetNode.partitionDefinition && (\n            <>\n              <Box\n                padding={{vertical: 16, horizontal: 24}}\n                border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n                flex={{justifyContent: 'space-between', gap: 8}}\n              >\n                <Subheading>Partitions</Subheading>\n              </Box>\n              <Box\n                padding={{top: 16, horizontal: 24, bottom: 24}}\n                flex={{direction: 'column', gap: 16}}\n              >\n                <p>{assetNode.partitionDefinition}</p>\n                <PartitionHealthSummary assetKey={assetNode.assetKey} data={partitionHealthData} />\n              </Box>\n            </>\n          )}\n\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n            flex={{justifyContent: 'space-between', gap: 8}}\n          >\n            <Subheading>\n              Upstream Assets{upstream?.length ? ` (${upstream.length})` : ''}\n            </Subheading>\n            <Link to=\"?view=lineage&lineageScope=upstream\">\n              <Box flex={{gap: 4, alignItems: 'center'}}>\n                View upstream graph\n                <Icon name=\"open_in_new\" color={Colors.Link} />\n              </Box>\n            </Link>\n          </Box>\n          <AssetNodeList items={upstream} liveDataByNode={liveDataByNode} />\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n            flex={{justifyContent: 'space-between', gap: 8}}\n          >\n            <Subheading>\n              Downstream Assets{downstream?.length ? ` (${downstream.length})` : ''}\n            </Subheading>\n            <Link to=\"?view=lineage&lineageScope=downstream\">\n              <Box flex={{gap: 4, alignItems: 'center'}}>\n                View downstream graph\n                <Icon name=\"open_in_new\" color={Colors.Link} />\n              </Box>\n            </Link>\n          </Box>\n          <AssetNodeList items={downstream} liveDataByNode={liveDataByNode} />\n          {/** Ensures the line between the left and right columns goes to the bottom of the page */}\n          <div style={{flex: 1}} />\n        </Box>\n        {assetConfigSchema ? (\n          <Box\n            border={{side: 'vertical', width: 1, color: Colors.KeylineGray}}\n            style={{flex: 0.5, minWidth: 0}}\n            flex={{direction: 'column'}}\n          >\n            <Box\n              padding={{vertical: 16, horizontal: 24}}\n              border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            >\n              <Subheading>Config</Subheading>\n            </Box>\n            <Box padding={{vertical: 16, horizontal: 24}}>\n              <ConfigTypeSchema\n                type={assetConfigSchema}\n                typesInScope={assetConfigSchema.recursiveConfigTypes}\n              />\n            </Box>\n          </Box>\n        ) : null}\n\n        <Box style={{flex: 0.5, minWidth: 0}} flex={{direction: 'column'}}>\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n          >\n            <Subheading>Type</Subheading>\n          </Box>\n          {assetType ? (\n            <DagsterTypeSummary type={assetType} />\n          ) : (\n            <Box padding={{vertical: 16, horizontal: 24}}>\n              <Description description=\"No type data provided.\" />\n            </Box>\n          )}\n          {assetMetadata.length > 0 && (\n            <>\n              <Box\n                padding={{vertical: 16, horizontal: 24}}\n                border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n                flex={{justifyContent: 'space-between', gap: 8}}\n              >\n                <Subheading>Metadata</Subheading>\n              </Box>\n              <Box style={{flex: 1}}>\n                <AssetMetadataTable assetMetadata={assetMetadata} />\n              </Box>\n            </>\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst DefinitionLocation: React.FC<{\n  assetNode: AssetNodeDefinitionFragment;\n  repoAddress: RepoAddress;\n}> = ({assetNode, repoAddress}) => (\n  <Box flex={{alignItems: 'baseline', gap: 16, wrap: 'wrap'}} style={{lineHeight: 0}}>\n    {assetNode.jobNames\n      .filter((jobName) => !isHiddenAssetGroupJob(jobName))\n      .map((jobName) => (\n        <Mono key={jobName}>\n          <PipelineReference\n            isJob\n            showIcon\n            pipelineName={jobName}\n            pipelineHrefContext={repoAddress}\n          />\n        </Mono>\n      ))}\n    <OpNamesDisplay assetNode={assetNode} repoAddress={repoAddress} />\n    {isSourceAsset(assetNode) && (\n      <Caption style={{lineHeight: '16px', marginTop: 2}}>Source Asset</Caption>\n    )}\n  </Box>\n);\n\nconst OpNamesDisplay = (props: {\n  assetNode: AssetNodeDefinitionFragment;\n  repoAddress: RepoAddress;\n}) => {\n  const {assetNode, repoAddress} = props;\n  const {assetKey, graphName, opNames, jobNames} = assetNode;\n  const opCount = opNames.length;\n\n  if (!opCount) {\n    return null;\n  }\n\n  if (!graphName) {\n    const firstOp = opNames[0];\n    if (displayNameForAssetKey(assetKey) === firstOp) {\n      return null;\n    }\n    const opPath = workspacePathFromAddress(repoAddress, `/ops/${firstOp}`);\n    return (\n      <Box flex={{gap: 4, alignItems: 'center'}}>\n        <Icon name=\"op\" size={16} />\n        <Mono>\n          <Link to={opPath}>{firstOp}</Link>\n        </Mono>\n      </Box>\n    );\n  }\n\n  if (!jobNames.length) {\n    return null;\n  }\n\n  return (\n    <Box flex={{gap: 4, alignItems: 'center'}}>\n      <Icon name=\"schema\" size={16} />\n      <Mono>\n        <Link to={workspacePathFromAddress(repoAddress, `/graphs/${jobNames[0]}/${graphName}/`)}>\n          {graphName}\n        </Link>\n        {` (${opCount === 1 ? '1 op' : `${opCount} ops`})`}\n      </Mono>\n    </Box>\n  );\n};\n\nexport const ASSET_NODE_DEFINITION_FRAGMENT = gql`\n  fragment AssetNodeDefinitionFragment on AssetNode {\n    id\n    ...AssetNodeConfigFragment\n    description\n    graphName\n    opNames\n    jobNames\n    partitionDefinition\n    repository {\n      id\n      name\n      location {\n        id\n        name\n      }\n    }\n    ...AssetNodeFragment\n    ...AssetNodeOpMetadataFragment\n  }\n  ${ASSET_NODE_CONFIG_FRAGMENT}\n  ${ASSET_NODE_FRAGMENT}\n  ${ASSET_NODE_OP_METADATA_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport flatMap from 'lodash/flatMap';\nimport React from 'react';\n\nimport {ScheduleOrSensorTag} from '../nav/ScheduleOrSensorTag';\nimport {SCHEDULE_SWITCH_FRAGMENT} from '../schedules/ScheduleSwitch';\nimport {SENSOR_SWITCH_FRAGMENT} from '../sensors/SensorSwitch';\nimport {RepoAddress} from '../workspace/types';\n\nimport {AssetNodeInstigatorsFragment} from './types/AssetNodeInstigatorsFragment';\n\nexport const AssetNodeInstigatorTag: React.FC<{\n  assetNode: AssetNodeInstigatorsFragment;\n  repoAddress: RepoAddress;\n}> = ({assetNode, repoAddress}) => {\n  const schedules = flatMap(assetNode.jobs, (j) => j.schedules);\n  const sensors = flatMap(assetNode.jobs, (j) => j.sensors);\n\n  return (\n    <ScheduleOrSensorTag\n      repoAddress={repoAddress}\n      schedules={schedules}\n      sensors={sensors}\n      showSwitch={false}\n    />\n  );\n};\n\nexport const ASSET_NODE_INSTIGATORS_FRAGMENT = gql`\n  fragment AssetNodeInstigatorsFragment on AssetNode {\n    id\n    jobs {\n      id\n      name\n      schedules {\n        id\n        __typename\n        ...ScheduleSwitchFragment\n      }\n      sensors {\n        id\n        __typename\n        ...SensorSwitchFragment\n      }\n    }\n  }\n  ${SCHEDULE_SWITCH_FRAGMENT}\n  ${SENSOR_SWITCH_FRAGMENT}\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AssetConnectedEdges} from '../asset-graph/AssetEdges';\nimport {MINIMAL_SCALE} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGroupNode} from '../asset-graph/AssetGroupNode';\nimport {AssetNodeMinimal, AssetNode} from '../asset-graph/AssetNode';\nimport {ForeignNode} from '../asset-graph/ForeignNode';\nimport {GraphData, LiveData, toGraphId} from '../asset-graph/Utils';\nimport {SVGViewport} from '../graph/SVGViewport';\nimport {useAssetLayout} from '../graph/asyncGraphLayout';\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nimport {AssetViewParams} from './AssetView';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {AssetKey} from './types';\nimport {AssetNodeDefinitionFragment} from './types/AssetNodeDefinitionFragment';\n\nconst LINEAGE_GRAPH_ZOOM_LEVEL = 'lineageGraphZoomLevel';\n\nexport type AssetLineageScope = 'neighbors' | 'upstream' | 'downstream';\n\nexport const AssetNodeLineageGraph: React.FC<{\n  assetNode: AssetNodeDefinitionFragment;\n  assetGraphData: GraphData;\n  liveDataByNode: LiveData;\n  params: AssetViewParams;\n}> = ({assetNode, assetGraphData, liveDataByNode, params}) => {\n  const assetGraphId = toGraphId(assetNode.assetKey);\n\n  const [highlighted, setHighlighted] = React.useState<string | null>(null);\n\n  const {layout, loading} = useAssetLayout(assetGraphData);\n  const viewportEl = React.useRef<SVGViewport>();\n  const history = useHistory();\n\n  const onClickAsset = (key: AssetKey) => {\n    history.push(assetDetailsPathForKey(key, {...params, lineageScope: 'neighbors'}));\n  };\n\n  React.useEffect(() => {\n    if (viewportEl.current && layout) {\n      const lastZoomLevel = Number(getJSONForKey(LINEAGE_GRAPH_ZOOM_LEVEL));\n      viewportEl.current.autocenter(false, lastZoomLevel);\n      viewportEl.current.focus();\n    }\n  }, [viewportEl, layout, assetGraphId]);\n\n  if (!layout || loading) {\n    return (\n      <Box style={{flex: 1}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n        <Spinner purpose=\"page\" />\n      </Box>\n    );\n  }\n\n  return (\n    <SVGViewport\n      ref={(r) => (viewportEl.current = r || undefined)}\n      interactor={SVGViewport.Interactors.PanAndZoom}\n      graphWidth={layout.width}\n      graphHeight={layout.height}\n      onDoubleClick={(e) => {\n        viewportEl.current?.autocenter(true);\n        e.stopPropagation();\n      }}\n      maxZoom={1.2}\n      maxAutocenterZoom={1.2}\n    >\n      {({scale}) => (\n        <SVGContainer width={layout.width} height={layout.height}>\n          {viewportEl.current && <SVGSaveZoomLevel scale={scale} />}\n          <AssetConnectedEdges highlighted={highlighted} edges={layout.edges} />\n\n          {Object.values(layout.groups)\n            .sort((a, b) => a.id.length - b.id.length)\n            .map((group) => (\n              <foreignObject {...group.bounds} key={group.id}>\n                <AssetGroupNode group={group} scale={scale} />\n              </foreignObject>\n            ))}\n\n          {Object.values(layout.nodes).map(({id, bounds}) => {\n            const graphNode = assetGraphData.nodes[id];\n            const path = JSON.parse(id);\n\n            return (\n              <foreignObject\n                {...bounds}\n                key={id}\n                style={{overflow: 'visible'}}\n                onMouseEnter={() => setHighlighted(id)}\n                onMouseLeave={() => setHighlighted(null)}\n                onClick={() => onClickAsset({path})}\n                onDoubleClick={(e) => {\n                  viewportEl.current?.zoomToSVGBox(bounds, true, 1.2);\n                  e.stopPropagation();\n                }}\n              >\n                {!graphNode || !graphNode.definition.opNames.length ? (\n                  <ForeignNode assetKey={{path}} />\n                ) : scale < MINIMAL_SCALE ? (\n                  <AssetNodeMinimal\n                    definition={graphNode.definition}\n                    selected={graphNode.id === assetGraphId}\n                  />\n                ) : (\n                  <AssetNode\n                    definition={graphNode.definition}\n                    liveData={liveDataByNode[graphNode.id]}\n                    selected={graphNode.id === assetGraphId}\n                  />\n                )}\n              </foreignObject>\n            );\n          })}\n        </SVGContainer>\n      )}\n    </SVGViewport>\n  );\n};\n\nconst SVGSaveZoomLevel = ({scale}: {scale: number}) => {\n  React.useEffect(() => {\n    try {\n      window.localStorage.setItem(LINEAGE_GRAPH_ZOOM_LEVEL, JSON.stringify(scale));\n    } catch (err) {\n      // no-op\n    }\n  }, [scale]);\n  return <></>;\n};\n\nconst SVGContainer = styled.svg`\n  overflow: visible;\n  border-radius: 0;\n`;\n","import {Box, Button, ButtonGroup, Colors, Icon, JoinedButtons, TextInput} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {GraphData, LiveData} from '../asset-graph/Utils';\nimport {AssetGraphQueryItem, calculateGraphDistances} from '../asset-graph/useAssetGraphData';\n\nimport {AssetLineageScope, AssetNodeLineageGraph} from './AssetNodeLineageGraph';\nimport {AssetViewParams} from './AssetView';\nimport {LaunchAssetExecutionButton} from './LaunchAssetExecutionButton';\nimport {AssetNodeDefinitionFragment} from './types/AssetNodeDefinitionFragment';\n\nexport const AssetNodeLineage: React.FC<{\n  params: AssetViewParams;\n  setParams: (params: AssetViewParams) => void;\n  assetNode: AssetNodeDefinitionFragment;\n  assetGraphData: GraphData;\n  liveDataByNode: LiveData;\n  requestedDepth: number;\n  graphQueryItems: AssetGraphQueryItem[];\n}> = ({\n  params,\n  setParams,\n  assetNode,\n  liveDataByNode,\n  assetGraphData,\n  graphQueryItems,\n  requestedDepth,\n}) => {\n  const maxDistances = React.useMemo(\n    () => calculateGraphDistances(graphQueryItems, assetNode.assetKey),\n    [graphQueryItems, assetNode],\n  );\n  const maxDepth =\n    params.lineageScope === 'upstream'\n      ? maxDistances.upstream\n      : params.lineageScope === 'downstream'\n      ? maxDistances.downstream\n      : Math.max(maxDistances.upstream, maxDistances.downstream);\n\n  const currentDepth = Math.max(1, Math.min(maxDepth, requestedDepth));\n\n  return (\n    <Box style={{width: '100%', height: '100%', position: 'relative'}} flex={{direction: 'column'}}>\n      <Box\n        flex={{justifyContent: 'space-between', alignItems: 'center', gap: 12}}\n        padding={{left: 24, right: 12, vertical: 12}}\n        border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n      >\n        <ButtonGroup<AssetLineageScope>\n          activeItems={new Set([params.lineageScope || 'neighbors'])}\n          buttons={[\n            {id: 'neighbors', label: 'Nearest Neighbors', icon: 'graph_neighbors'},\n            {id: 'upstream', label: 'Upstream', icon: 'graph_upstream'},\n            {id: 'downstream', label: 'Downstream', icon: 'graph_downstream'},\n          ]}\n          onClick={(lineageScope) => setParams({...params, lineageScope, lineageDepth: undefined})}\n        />\n        <LineageDepthControl\n          value={currentDepth}\n          onChange={(depth) => setParams({...params, lineageDepth: depth})}\n          max={maxDepth}\n        />\n        <div style={{flex: 1}} />\n        {Object.values(assetGraphData.nodes).length > 1 ? (\n          <LaunchAssetExecutionButton\n            assetKeys={Object.values(assetGraphData.nodes).map((n) => n.assetKey)}\n            intent=\"none\"\n            context=\"all\"\n          />\n        ) : (\n          <Button icon={<Icon name=\"materialization\" />} disabled>\n            Materialize all\n          </Button>\n        )}\n      </Box>\n      {currentDepth < maxDepth && (\n        <DepthHidesAssetsNotice>\n          Not all upstream/downstream assets shown. Increase the depth to show more.\n        </DepthHidesAssetsNotice>\n      )}\n      <AssetNodeLineageGraph\n        assetNode={assetNode}\n        liveDataByNode={liveDataByNode}\n        assetGraphData={assetGraphData}\n        params={params}\n      />\n    </Box>\n  );\n};\n\nconst DepthHidesAssetsNotice = styled.div`\n  background: ${Colors.Gray100};\n  border-radius: 8px;\n  color: ${Colors.Gray500};\n  align-items: center;\n  display: flex;\n  padding: 4px 8px;\n  gap: 4px;\n  position: absolute;\n  right: 12px;\n  top: 70px;\n  z-index: 2;\n`;\n\nconst LineageDepthControl: React.FC<{\n  value: number;\n  max: number;\n  onChange: (v: number) => void;\n}> = ({value, max, onChange}) => {\n  const [text, setText] = React.useState(`${value}`);\n  React.useEffect(() => {\n    setText(`${value}`);\n  }, [value]);\n\n  // We maintain the value in a separate piece of state so the user can clear it\n  // or briefly have an invalid value, and also so that the graph doesn't re-render\n  // on each keystroke which could be expensive.\n  const commitText = () => {\n    const next = Number(text) ? Math.min(max, Number(text)) : value;\n    onChange(next);\n  };\n\n  return (\n    <Box flex={{gap: 8, alignItems: 'center'}}>\n      Graph depth\n      <JoinedButtons>\n        <Button\n          disabled={value <= 1}\n          onClick={() => onChange(value - 1)}\n          icon={<Icon name=\"subtract\" />}\n        />\n        <TextInput\n          min={1}\n          max={max}\n          disabled={max <= 1}\n          inputMode=\"numeric\"\n          style={{\n            width: 40,\n            marginLeft: -1,\n            textAlign: 'center',\n            height: 32,\n            padding: 6,\n            borderRadius: 0,\n            boxShadow: 'none',\n            border: `1px solid ${Colors.Gray300}`,\n          }}\n          key={value}\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyDown={(e) => (e.key === 'Enter' || e.key === 'Return' ? commitText() : undefined)}\n          onBlur={() => commitText()}\n        />\n        <Button\n          disabled={value >= max}\n          onClick={() => onChange(value + 1)}\n          icon={<Icon name=\"add\" />}\n        />\n        <Button disabled={value >= max} onClick={() => onChange(max)}>\n          All\n        </Button>\n      </JoinedButtons>\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  BaseTag,\n  Box,\n  ButtonLink,\n  Colors,\n  NonIdealState,\n  Spinner,\n  Tab,\n  Tabs,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {GraphData, toGraphId, tokenForAssetKey} from '../asset-graph/Utils';\nimport {useAssetGraphData} from '../asset-graph/useAssetGraphData';\nimport {useLiveDataForAssetKeys} from '../asset-graph/useLiveDataForAssetKeys';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {useDidLaunchEvent} from '../runs/RunUtils';\nimport {AssetComputeStatus} from '../types/globalTypes';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {AssetEvents} from './AssetEvents';\nimport {AssetNodeDefinition, ASSET_NODE_DEFINITION_FRAGMENT} from './AssetNodeDefinition';\nimport {AssetNodeInstigatorTag, ASSET_NODE_INSTIGATORS_FRAGMENT} from './AssetNodeInstigatorTag';\nimport {AssetNodeLineage} from './AssetNodeLineage';\nimport {AssetLineageScope} from './AssetNodeLineageGraph';\nimport {AssetPageHeader} from './AssetPageHeader';\nimport {LaunchAssetExecutionButton} from './LaunchAssetExecutionButton';\nimport {AssetKey} from './types';\nimport {AssetQuery, AssetQueryVariables} from './types/AssetQuery';\n\ninterface Props {\n  assetKey: AssetKey;\n}\n\nexport interface AssetViewParams {\n  view?: 'activity' | 'definition' | 'lineage';\n  lineageScope?: AssetLineageScope;\n  lineageDepth?: number;\n  partition?: string;\n  time?: string;\n  asOf?: string;\n}\n\nexport const AssetView: React.FC<Props> = ({assetKey}) => {\n  const [params, setParams] = useQueryPersistedState<AssetViewParams>({});\n\n  const queryResult = useQuery<AssetQuery, AssetQueryVariables>(ASSET_QUERY, {\n    variables: {assetKey: {path: assetKey.path}},\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const {assetOrError} = queryResult.data || queryResult.previousData || {};\n  const asset = assetOrError && assetOrError.__typename === 'Asset' ? assetOrError : null;\n  const materializations = asset?.assetMaterializations;\n  const lastMaterializedAt = materializations?.length ? materializations[0].timestamp : undefined;\n  const viewingMostRecent = !params.asOf || Number(lastMaterializedAt) <= Number(params.asOf);\n\n  const definition = asset?.definition;\n  const repoAddress = definition\n    ? buildRepoAddress(definition.repository.name, definition.repository.location.name)\n    : null;\n\n  const token = tokenForAssetKey(assetKey);\n\n  const defaultDepth = params.lineageScope === 'neighbors' ? 2 : 5;\n  const requestedDepth = Number(params.lineageDepth) || defaultDepth;\n  const depthStr = '+'.repeat(requestedDepth);\n\n  const {assetGraphData, graphAssetKeys, graphQueryItems} = useAssetGraphData(\n    params.view === 'lineage' && params.lineageScope === 'upstream'\n      ? `${depthStr}\"${token}\"`\n      : params.view === 'lineage' && params.lineageScope === 'downstream'\n      ? `\"${token}\"${depthStr}`\n      : `${depthStr}\"${token}\"${depthStr}`,\n    {hideEdgesToNodesOutsideQuery: true},\n  );\n\n  const {upstream, downstream} = useNeighborsFromGraph(assetGraphData, assetKey);\n  const {liveResult, liveDataByNode} = useLiveDataForAssetKeys(graphAssetKeys);\n\n  const refreshState = useMergedRefresh(\n    useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS),\n    useQueryRefreshAtInterval(liveResult, FIFTEEN_SECONDS),\n  );\n\n  // Refresh immediately when a run is launched from this page\n  useDidLaunchEvent(queryResult.refetch);\n  useDidLaunchEvent(liveResult.refetch);\n\n  // Avoid thrashing the materializations UI (which chooses a different default query based on whether\n  // data is partitioned) by waiting for the definition to be loaded. (null OR a valid definition)\n  const isDefinitionLoaded = definition !== undefined;\n  const isUpstreamChanged =\n    liveDataByNode[toGraphId(assetKey)]?.computeStatus === AssetComputeStatus.OUT_OF_DATE;\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', width: '100%', overflowY: 'auto'}}>\n      <AssetPageHeader\n        assetKey={assetKey}\n        tags={\n          <>\n            {repoAddress ? (\n              <Tag icon=\"asset\">\n                Asset in <RepositoryLink repoAddress={repoAddress} />\n              </Tag>\n            ) : (\n              <Tag icon=\"asset_non_sda\">Asset</Tag>\n            )}\n            {definition && repoAddress && (\n              <AssetNodeInstigatorTag assetNode={definition} repoAddress={repoAddress} />\n            )}\n            {definition && repoAddress && definition.groupName && (\n              <Tag icon=\"asset_group\">\n                <Link\n                  to={workspacePathFromAddress(\n                    repoAddress,\n                    `/asset-groups/${definition.groupName}`,\n                  )}\n                >\n                  {definition.groupName}\n                </Link>\n              </Tag>\n            )}\n            {isUpstreamChanged ? (\n              <Box\n                onClick={() => setParams({...params, view: 'lineage', lineageScope: 'upstream'})}\n              >\n                <BaseTag\n                  fillColor={Colors.Yellow50}\n                  textColor={Colors.Yellow700}\n                  label=\"Upstream changed\"\n                  interactive\n                />\n              </Box>\n            ) : undefined}\n          </>\n        }\n        tabs={\n          <Tabs size=\"large\" selectedTabId={params.view || 'activity'}>\n            <Tab\n              id=\"activity\"\n              title=\"Activity\"\n              onClick={() => setParams({...params, view: 'activity'})}\n            />\n            <Tab\n              id=\"definition\"\n              title=\"Definition\"\n              onClick={() => setParams({...params, view: 'definition'})}\n              disabled={!definition}\n            />\n            <Tab\n              id=\"lineage\"\n              title=\"Lineage\"\n              onClick={() => setParams({...params, view: 'lineage'})}\n              disabled={!definition}\n            />\n          </Tabs>\n        }\n        right={\n          <Box style={{margin: '-4px 0'}} flex={{gap: 12, alignItems: 'baseline'}}>\n            <Box margin={{top: 4}}>\n              <QueryRefreshCountdown refreshState={refreshState} />\n            </Box>\n            {definition && definition.jobNames.length > 0 && repoAddress && upstream && (\n              <LaunchAssetExecutionButton assetKeys={[definition.assetKey]} />\n            )}\n          </Box>\n        }\n      />\n\n      <div>\n        {queryResult.loading && !queryResult.previousData ? (\n          <Box\n            style={{height: 390}}\n            flex={{direction: 'row', justifyContent: 'center', alignItems: 'center'}}\n          >\n            <Spinner purpose=\"page\" />\n          </Box>\n        ) : viewingMostRecent ? null : (\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n          >\n            <HistoricalViewAlert\n              asOf={params.asOf}\n              onClick={() => setParams({asOf: undefined, time: params.asOf})}\n              hasDefinition={!!definition}\n            />\n          </Box>\n        )}\n      </div>\n      {isDefinitionLoaded &&\n        (params.view === 'definition' ? (\n          definition ? (\n            <AssetNodeDefinition\n              assetNode={definition}\n              upstream={upstream}\n              downstream={downstream}\n              liveDataByNode={liveDataByNode}\n            />\n          ) : (\n            <AssetNoDefinitionState />\n          )\n        ) : params.view === 'lineage' ? (\n          definition ? (\n            assetGraphData ? (\n              <AssetNodeLineage\n                params={params}\n                setParams={setParams}\n                assetNode={definition}\n                liveDataByNode={liveDataByNode}\n                assetGraphData={assetGraphData}\n                requestedDepth={requestedDepth}\n                graphQueryItems={graphQueryItems}\n              />\n            ) : (\n              <Box style={{flex: 1}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n                <Spinner purpose=\"page\" />\n              </Box>\n            )\n          ) : (\n            <AssetNoDefinitionState />\n          )\n        ) : (\n          <AssetEvents\n            assetKey={assetKey}\n            assetLastMaterializedAt={lastMaterializedAt}\n            assetHasDefinedPartitions={!!definition?.partitionDefinition}\n            params={params}\n            paramsTimeWindowOnly={!!params.asOf}\n            setParams={setParams}\n            liveData={definition ? liveDataByNode[toGraphId(definition.assetKey)] : undefined}\n          />\n        ))}\n    </Box>\n  );\n};\n\nconst AssetNoDefinitionState = () => (\n  <Box padding={{vertical: 32}}>\n    <NonIdealState\n      title=\"No definition\"\n      description=\"This asset doesn't have a software definition in any of your loaded repositories.\"\n      icon=\"materialization\"\n    />\n  </Box>\n);\n\nfunction useNeighborsFromGraph(graphData: GraphData | null, assetKey: AssetKey) {\n  const graphId = toGraphId(assetKey);\n\n  return React.useMemo(() => {\n    if (!graphData) {\n      return {upstream: null, downstream: null};\n    }\n    return {\n      upstream: Object.values(graphData.nodes)\n        .filter((n) => graphData.upstream[graphId]?.[toGraphId(n.assetKey)])\n        .map((n) => n.definition),\n      downstream: Object.values(graphData.nodes)\n        .filter((n) => graphData.downstream[graphId]?.[toGraphId(n.assetKey)])\n        .map((n) => n.definition),\n    };\n  }, [graphData, graphId]);\n}\n\nconst ASSET_QUERY = gql`\n  query AssetQuery($assetKey: AssetKeyInput!) {\n    assetOrError(assetKey: $assetKey) {\n      ... on Asset {\n        id\n        key {\n          path\n        }\n\n        assetMaterializations(limit: 1) {\n          timestamp\n        }\n\n        definition {\n          id\n          groupName\n          partitionDefinition\n          repository {\n            id\n            name\n            location {\n              id\n              name\n            }\n          }\n\n          ...AssetNodeInstigatorsFragment\n          ...AssetNodeDefinitionFragment\n        }\n      }\n    }\n  }\n  ${ASSET_NODE_INSTIGATORS_FRAGMENT}\n  ${ASSET_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst HistoricalViewAlert: React.FC<{\n  asOf: string | undefined;\n  onClick: () => void;\n  hasDefinition: boolean;\n}> = ({asOf, onClick, hasDefinition}) => (\n  <Alert\n    intent=\"info\"\n    title={\n      <span>\n        This is a historical view of materializations as of{' '}\n        <span style={{fontWeight: 600}}>\n          <Timestamp\n            timestamp={{ms: Number(asOf)}}\n            timeFormat={{showSeconds: true, showTimezone: true}}\n          />\n        </span>\n        .\n      </span>\n    }\n    description={\n      <ButtonLink onClick={onClick} underline=\"always\">\n        {hasDefinition\n          ? 'Show definition and latest materializations'\n          : 'Show latest materializations'}\n      </ButtonLink>\n    }\n  />\n);\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Group,\n  IconName,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  Tab,\n  Tabs,\n  IconWrapper,\n  Colors,\n  Tooltip,\n  FontFamily,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useCopyToClipboard} from '../app/browser';\nimport {OptionsContainer, OptionsDivider} from '../gantt/VizComponents';\nimport {compactNumber} from '../ui/formatters';\n\nimport {ExecutionStateDot} from './ExecutionStateDot';\nimport {LogLevel} from './LogLevel';\nimport {LogsFilterInput} from './LogsFilterInput';\nimport {LogFilter, LogFilterValue} from './LogsProvider';\nimport {\n  extractLogCaptureStepsFromLegacySteps,\n  ILogCaptureInfo,\n  IRunMetadataDict,\n  IStepState,\n} from './RunMetadataProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nexport enum LogType {\n  structured = 'structured',\n  stdout = 'stdout',\n  stderr = 'stderr',\n}\n\ninterface ILogsToolbarProps {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  counts: LogLevelCounts;\n\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  logType: LogType;\n  onSetLogType: (logType: LogType) => void;\n  computeLogKey?: string;\n  onSetComputeLogKey: (key: string) => void;\n  computeLogUrl: string | null;\n}\n\nconst logQueryToString = (logQuery: LogFilterValue[]) =>\n  logQuery.map(({token, value}) => (token ? `${token}:${value}` : value)).join(' ');\n\nexport const LogsToolbar: React.FC<ILogsToolbarProps> = (props) => {\n  const {\n    steps,\n    metadata,\n    counts,\n    filter,\n    onSetFilter,\n    logType,\n    onSetLogType,\n    computeLogKey,\n    onSetComputeLogKey,\n    computeLogUrl,\n  } = props;\n\n  const activeItems = React.useMemo(\n    () => new Set([logType === LogType.structured ? logType : LogType.stdout]),\n    [logType],\n  );\n\n  return (\n    <OptionsContainer>\n      <ButtonGroup\n        activeItems={activeItems}\n        buttons={[\n          {id: LogType.structured, icon: 'list', tooltip: 'Structured event logs'},\n          {id: LogType.stdout, icon: 'wysiwyg', tooltip: 'Raw compute logs'},\n        ]}\n        onClick={(id) => onSetLogType(id)}\n      />\n      <OptionsDivider />\n      {logType === 'structured' ? (\n        <StructuredLogToolbar\n          counts={counts}\n          filter={filter}\n          onSetFilter={onSetFilter}\n          steps={steps}\n        />\n      ) : (\n        <ComputeLogToolbar\n          steps={steps}\n          metadata={metadata}\n          logType={logType}\n          onSetLogType={onSetLogType}\n          computeLogKey={computeLogKey}\n          onSetComputeLogKey={onSetComputeLogKey}\n          computeLogUrl={computeLogUrl}\n        />\n      )}\n    </OptionsContainer>\n  );\n};\n\nconst resolveState = (metadata: IRunMetadataDict, logCapture: ILogCaptureInfo) => {\n  // resolves the state of potentially many steps into a single state so that we can show the\n  // execution dot representing the status of this log capture group (potentially at the process\n  // level)\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.RUNNING)) {\n    return IStepState.RUNNING;\n  }\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.SKIPPED)) {\n    return IStepState.SKIPPED;\n  }\n  if (\n    logCapture.stepKeys.every((stepKey) => metadata.steps[stepKey].state === IStepState.SUCCEEDED)\n  ) {\n    return IStepState.SUCCEEDED;\n  }\n  return IStepState.FAILED;\n};\n\nconst ComputeLogToolbar = ({\n  steps,\n  metadata,\n  computeLogKey,\n  onSetComputeLogKey,\n  logType,\n  onSetLogType,\n  computeLogUrl,\n}: {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  computeLogKey?: string;\n  onSetComputeLogKey: (step: string) => void;\n  logType: LogType;\n  onSetLogType: (type: LogType) => void;\n  computeLogUrl: string | null;\n}) => {\n  const logCaptureSteps =\n    metadata.logCaptureSteps || extractLogCaptureStepsFromLegacySteps(Object.keys(metadata.steps));\n  const isValidStepSelection = computeLogKey && logCaptureSteps[computeLogKey];\n  const logKeyText = (logKey?: string) => {\n    if (!logKey || !logCaptureSteps[logKey]) {\n      return null;\n    }\n    const captureInfo = logCaptureSteps[logKey];\n    if (captureInfo.stepKeys.length === 1 && logKey === captureInfo.stepKeys[0]) {\n      return logKey;\n    }\n    if (captureInfo.pid) {\n      return `pid: ${captureInfo.pid} (${captureInfo.stepKeys.length} steps)`;\n    }\n    return `${logKey} (${captureInfo.stepKeys.length} steps)`;\n  };\n\n  return (\n    <Box\n      flex={{justifyContent: 'space-between', alignItems: 'center', direction: 'row'}}\n      style={{flex: 1}}\n    >\n      <Group direction=\"row\" spacing={24} alignItems=\"center\">\n        <Select\n          disabled={!steps.length}\n          items={Object.keys(logCaptureSteps)}\n          itemRenderer={(item: string, options: {handleClick: any; modifiers: any}) => (\n            <MenuItem\n              key={item}\n              onClick={options.handleClick}\n              text={logKeyText(item)}\n              active={options.modifiers.active}\n            />\n          )}\n          activeItem={computeLogKey}\n          filterable={false}\n          onItemSelect={(logKey) => {\n            onSetComputeLogKey(logKey);\n          }}\n        >\n          <Button disabled={!steps.length} rightIcon={<Icon name=\"expand_more\" />}>\n            {logKeyText(computeLogKey) || 'Select a step...'}\n          </Button>\n        </Select>\n        {isValidStepSelection ? (\n          <Tabs selectedTabId={logType} onChange={onSetLogType} size=\"small\">\n            <Tab id={LogType.stdout} title=\"stdout\" />\n            <Tab id={LogType.stderr} title=\"stderr\" />\n          </Tabs>\n        ) : null}\n      </Group>\n      {isValidStepSelection ? (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          {computeLogKey && logCaptureSteps[computeLogKey] ? (\n            resolveState(metadata, logCaptureSteps[computeLogKey]) === IStepState.RUNNING ? (\n              <Spinner purpose=\"body-text\" />\n            ) : (\n              <ExecutionStateDot state={resolveState(metadata, logCaptureSteps[computeLogKey])} />\n            )\n          ) : null}\n          {computeLogUrl ? (\n            <Tooltip\n              placement=\"top-end\"\n              content={\n                computeLogKey && logCaptureSteps[computeLogKey]?.stepKeys.length === 1\n                  ? `Download ${logCaptureSteps[computeLogKey]?.stepKeys[0]} compute logs`\n                  : `Download compute logs`\n              }\n            >\n              <DownloadLink aria-label=\"Download link\" href={computeLogUrl} download>\n                <Icon name=\"download_for_offline\" color={Colors.Gray600} />\n              </DownloadLink>\n            </Tooltip>\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DownloadLink = styled.a`\n  border-radius: 4px;\n  display: block;\n  text-decoration: none;\n\n  ${IconWrapper} {\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper} {\n    background-color: ${Colors.Gray800};\n  }\n\n  :active ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport type LogLevelCounts = Record<LogLevel, number>;\n\nconst StructuredLogToolbar = ({\n  filter,\n  counts,\n  onSetFilter,\n  steps,\n}: {\n  filter: LogFilter;\n  counts: LogLevelCounts;\n  onSetFilter: (filter: LogFilter) => void;\n  steps: string[];\n}) => {\n  const [copyIcon, setCopyIcon] = React.useState<IconName>('assignment');\n  const logQueryString = logQueryToString(filter.logQuery);\n  const [queryString, setQueryString] = React.useState<string>(() => logQueryString);\n  const copyToClipboard = useCopyToClipboard();\n\n  const selectedStep = filter.logQuery.find((v) => v.token === 'step')?.value || null;\n  const filterText = filter.logQuery.reduce((accum, value) => accum + value.value, '');\n\n  // Reset the query string if the filter is updated, allowing external behavior\n  // (e.g. clicking a Gantt step) to set the input.\n  React.useEffect(() => {\n    setQueryString(logQueryString);\n  }, [logQueryString]);\n\n  const onChange = (value: string) => {\n    const tokens = value.split(/\\s+/);\n    const logQuery = tokens.map((item) => {\n      const segments = item.split(':');\n      if (segments.length > 1) {\n        return {token: segments[0], value: segments[1]};\n      }\n      return {value: segments[0]};\n    });\n    onSetFilter({...filter, logQuery: logQuery as LogFilterValue[]});\n    setQueryString(value);\n  };\n\n  // Restore the clipboard icon after a delay.\n  React.useEffect(() => {\n    let token: any;\n    if (copyIcon === 'assignment_turned_in') {\n      token = setTimeout(() => {\n        setCopyIcon('assignment');\n      }, 2000);\n    }\n    return () => {\n      token && clearTimeout(token);\n    };\n  }, [copyIcon]);\n\n  return (\n    <>\n      <LogsFilterInput\n        value={queryString}\n        suggestionProviders={getRunFilterProviders(steps)}\n        onChange={onChange}\n      />\n      {filterText ? (\n        <NonMatchCheckbox\n          checked={filter.hideNonMatches}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSetFilter({...filter, hideNonMatches: event.currentTarget.checked})\n          }\n          label=\"Hide non-matches\"\n        />\n      ) : null}\n      <OptionsDivider />\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        {Object.keys(LogLevel).map((level) => {\n          const enabled = filter.levels[level];\n          return (\n            <FilterLabel key={level} $enabled={enabled}>\n              <Checkbox\n                format=\"switch\"\n                size=\"small\"\n                checked={!!enabled}\n                fillColor={enabled ? Colors.Blue500 : Colors.Gray200}\n                onChange={() =>\n                  onSetFilter({\n                    ...filter,\n                    levels: {\n                      ...filter.levels,\n                      [level]: !enabled,\n                    },\n                  })\n                }\n              />\n              <LogLabel $enabled={enabled}>{level.toLowerCase()}</LogLabel>\n              <LogCount $enabled={enabled}>{compactNumber(counts[level])}</LogCount>\n            </FilterLabel>\n          );\n        })}\n      </Box>\n      {selectedStep && <OptionsDivider />}\n      <div style={{minWidth: 15, flex: 1}} />\n      <Button\n        icon={<Icon name={copyIcon} />}\n        onClick={() => {\n          copyToClipboard(window.location.href);\n          setCopyIcon('assignment_turned_in');\n        }}\n      >\n        Copy URL\n      </Button>\n    </>\n  );\n};\n\nconst NonMatchCheckbox = styled(Checkbox)`\n  &&& {\n    margin: 0 4px 0 12px;\n  }\n\n  white-space: nowrap;\n`;\n\nconst FilterLabel = styled.label<{$enabled: boolean}>`\n  background-color: ${({$enabled}) => ($enabled ? Colors.Blue50 : Colors.Gray100)};\n  border: none;\n  border-radius: 8px;\n  margin: 0;\n  padding: 4px 6px;\n  overflow: hidden;\n  cursor: pointer;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  gap: 6px;\n\n  box-shadow: transparent inset 0px 0px 0px 1px;\n  transition: background 50ms linear;\n\n  :focus {\n    box-shadow: rgba(58, 151, 212, 0.6) 0 0 0 3px;\n    outline: none;\n  }\n\n  :focus:not(:focus-visible) {\n    box-shadow: transparent inset 0px 0px 0px 1px, rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n  }\n`;\n\nconst LogLabel = styled.span<{$enabled: boolean}>`\n  color: ${({$enabled}) => ($enabled ? Colors.Blue500 : Colors.Gray700)};\n  line-height: 16px;\n  transition: background 50ms linear;\n`;\n\nconst LogCount = styled.span<{$enabled: boolean}>`\n  background-color: ${({$enabled}) => ($enabled ? Colors.Blue100 : Colors.Gray200)};\n  border-radius: 6px;\n  color: ${({$enabled}) => ($enabled ? Colors.Blue500 : Colors.Gray700)};\n  font-weight: 600;\n  font-family: ${FontFamily.monospace};\n  line-height: 16px;\n  padding: 1px 4px;\n  transition: background 50ms linear;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Page, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\nimport {useParams} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\nimport {AssetGlobalLineageLink, AssetPageHeader} from './AssetPageHeader';\nimport {AssetView} from './AssetView';\nimport {AssetsCatalogTable} from './AssetsCatalogTable';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  AssetsCatalogRootQuery,\n  AssetsCatalogRootQueryVariables,\n} from './types/AssetsCatalogRootQuery';\n\nexport const AssetsCatalogRoot = () => {\n  useTrackPageView();\n\n  const params = useParams();\n  const history = useHistory();\n  const currentPath: string[] = (params['0'] || '')\n    .split('/')\n    .filter((x: string) => x)\n    .map(decodeURIComponent);\n\n  const queryResult = useQuery<AssetsCatalogRootQuery, AssetsCatalogRootQueryVariables>(\n    ASSETS_CATALOG_ROOT_QUERY,\n    {\n      skip: currentPath.length === 0,\n      variables: {assetKey: {path: currentPath}},\n    },\n  );\n\n  useDocumentTitle(\n    currentPath && currentPath.length\n      ? `Assets: ${displayNameForAssetKey({path: currentPath})}`\n      : 'Assets',\n  );\n\n  return queryResult.loading ? (\n    <Page>\n      <AssetPageHeader assetKey={{path: currentPath}} />\n      <Box padding={64}>\n        <Spinner purpose=\"page\" />\n      </Box>\n    </Page>\n  ) : currentPath.length === 0 ||\n    queryResult.data?.assetOrError.__typename === 'AssetNotFoundError' ? (\n    <Page>\n      <AssetPageHeader\n        assetKey={{path: currentPath}}\n        right={\n          <Box flex={{gap: 12, alignItems: 'center'}}>\n            <AssetGlobalLineageLink />\n            <ReloadAllButton label=\"Reload definitions\" />\n          </Box>\n        }\n      />\n      <AssetsCatalogTable\n        prefixPath={currentPath}\n        setPrefixPath={(prefixPath) => history.push(assetDetailsPathForKey({path: prefixPath}))}\n      />\n    </Page>\n  ) : (\n    <AssetView assetKey={{path: currentPath}} />\n  );\n};\n\nconst ASSETS_CATALOG_ROOT_QUERY = gql`\n  query AssetsCatalogRootQuery($assetKey: AssetKeyInput!) {\n    assetOrError(assetKey: $assetKey) {\n      __typename\n      ... on Asset {\n        id\n        key {\n          path\n        }\n      }\n    }\n  }\n`;\n","import {Page, PageHeader, Heading} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {RepoFilterButton} from '../instance/RepoFilterButton';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport const AssetsGroupsGlobalGraphRoot: React.FC = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const history = useHistory();\n\n  useDocumentTitle(`Global Asset Lineage`);\n\n  const onChangeExplorerPath = React.useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode](\n        `/instance/asset-groups${explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(\n          __GLOBAL__,\n          '',\n        )}`,\n      );\n    },\n    [history],\n  );\n\n  const onNavigateToForeignNode = React.useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = React.useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        return !visibleRepos.some(\n          (repo) =>\n            repo.repositoryLocation.name === node.repository.location.name &&\n            repo.repository.name === node.repository.name,\n        );\n      },\n    };\n    return options;\n  }, [visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={\n          <div style={{marginBottom: -8}}>\n            <ReloadAllButton label=\"Reload definitions\" />\n          </div>\n        }\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        fetchOptionFilters={<>{allRepos.length > 1 && <RepoFilterButton />}</>}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={explorerPathFromString(__GLOBAL__ + path || '/')}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToForeignNode={onNavigateToForeignNode}\n      />\n    </Page>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Colors, Group, Icon, Spinner, FontFamily} from '@dagster-io/ui';\nimport Ansi from 'ansi-to-react';\nimport * as React from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\n\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\n\nconst TRUNCATE_PREFIX = '\\u001b[33m...logs truncated...\\u001b[39m\\n';\nconst SCROLLER_LINK_TIMEOUT_MS = 3000;\nexport const MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst shouldTruncate = (content: string | null | undefined) => {\n  if (!content) {\n    return false;\n  }\n  const encoder = new TextEncoder();\n  return encoder.encode(content).length >= MAX_STREAMING_LOG_BYTES;\n};\n\nexport class ComputeLogContent extends React.Component<{\n  logData?: ComputeLogContentFileFragment | null;\n  downloadUrl?: string | null;\n  isLoading?: boolean;\n  isVisible: boolean;\n}> {\n  private timeout: number | null = null;\n  private contentContainer = React.createRef<ScrollContainer>();\n\n  state = {\n    showScrollToTop: false,\n  };\n\n  hideWarning = () => {\n    this.setState({showScrollToTop: false});\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = 0;\n    }\n  };\n\n  scheduleHideWarning = () => {\n    this.timeout = window.setTimeout(this.hideWarning, SCROLLER_LINK_TIMEOUT_MS);\n  };\n\n  cancelHideWarning = () => {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = 0;\n    }\n  };\n\n  onScrollUp = (position: number) => {\n    this.cancelHideWarning();\n\n    if (!position) {\n      this.hideWarning();\n    } else {\n      this.setState({showScrollToTop: true});\n      this.scheduleHideWarning();\n    }\n  };\n\n  onScrollDown = (_position: number) => {\n    this.hideWarning();\n  };\n\n  scrollToTop = () => {\n    this.contentContainer.current && this.contentContainer.current.scrollToTop();\n  };\n\n  renderScrollToTop() {\n    const {showScrollToTop} = this.state;\n\n    if (!showScrollToTop) {\n      return null;\n    }\n\n    return (\n      <ScrollToast>\n        <ScrollToTop\n          onClick={() => this.scrollToTop()}\n          onMouseOver={this.cancelHideWarning}\n          onMouseOut={this.scheduleHideWarning}\n        >\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"arrow_upward\" color={Colors.White} />\n            Scroll to top\n          </Group>\n        </ScrollToTop>\n      </ScrollToast>\n    );\n  }\n\n  render() {\n    const {logData, isLoading, isVisible, downloadUrl} = this.props;\n    let content = logData?.data;\n    const isTruncated = shouldTruncate(content);\n\n    if (content && isTruncated) {\n      const nextLine = content.indexOf('\\n') + 1;\n      const truncated = nextLine < content.length ? content.slice(nextLine) : content;\n      content = TRUNCATE_PREFIX + truncated;\n    }\n    const warning = isTruncated ? (\n      <FileWarning>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          <Icon name=\"warning\" color={Colors.Yellow500} />\n          <div>\n            This log has exceeded the 5MB limit.{' '}\n            {downloadUrl ? (\n              <a href={downloadUrl} download>\n                Download the full log file\n              </a>\n            ) : null}\n            .\n          </div>\n        </Group>\n      </FileWarning>\n    ) : null;\n\n    return (\n      <>\n        <FileContainer isVisible={isVisible}>\n          {this.renderScrollToTop()}\n          <FileContent>\n            {warning}\n            <RelativeContainer>\n              <LogContent\n                isSelected={true}\n                content={content}\n                onScrollUp={this.onScrollUp}\n                onScrollDown={this.onScrollDown}\n                ref={this.contentContainer}\n              />\n            </RelativeContainer>\n          </FileContent>\n          {isLoading ? (\n            <LoadingContainer>\n              <Spinner purpose=\"page\" />\n            </LoadingContainer>\n          ) : null}\n        </FileContainer>\n        <FileFooter isVisible={isVisible}>{logData?.path}</FileFooter>\n      </>\n    );\n  }\n}\n\nexport const COMPUTE_LOG_CONTENT_FRAGMENT = gql`\n  fragment ComputeLogContentFileFragment on ComputeLogFile {\n    path\n    cursor\n    data\n    downloadUrl\n  }\n`;\n\ninterface IScrollContainerProps {\n  content: string | null | undefined;\n  isSelected?: boolean;\n  className?: string;\n  onScrollUp?: (position: number) => void;\n  onScrollDown?: (position: number) => void;\n}\n\nclass ScrollContainer extends React.Component<IScrollContainerProps> {\n  private container = React.createRef<HTMLDivElement>();\n  private lastScroll = 0;\n\n  componentDidMount() {\n    this.scrollToBottom();\n    if (this.container.current) {\n      this.container.current.focus();\n      this.container.current.addEventListener('scroll', this.onScroll);\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    if (!this.container.current) {\n      return false;\n    }\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const shouldScroll = offsetHeight + scrollTop >= scrollHeight;\n    return shouldScroll;\n  }\n\n  componentDidUpdate(_props: any, _state: any, shouldScroll: boolean) {\n    if (shouldScroll) {\n      this.scrollToBottom();\n    }\n    if (this.props.isSelected && !_props.isSelected) {\n      this.container.current && this.container.current.focus();\n    }\n  }\n\n  onScroll = () => {\n    if (!this.container.current || !this.props.isSelected) {\n      return;\n    }\n    const {onScrollUp, onScrollDown} = this.props;\n\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const position = scrollTop / (scrollHeight - offsetHeight);\n    if (this.container.current.scrollTop < this.lastScroll) {\n      onScrollUp && onScrollUp(position);\n    } else {\n      onScrollDown && onScrollDown(position);\n    }\n    this.lastScroll = this.container.current.scrollTop;\n  };\n\n  focus() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.focus();\n  }\n\n  scrollToBottom() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = node.scrollHeight - node.offsetHeight;\n  }\n\n  scrollToTop() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = 0;\n    node.focus();\n  }\n\n  render() {\n    const {content, className} = this.props;\n    if (!content) {\n      return (\n        <div className={className} ref={this.container}>\n          <ContentContainer style={{justifyContent: 'center', alignItems: 'center'}}>\n            {content == null ? 'No log file available' : 'No output'}\n          </ContentContainer>\n        </div>\n      );\n    }\n\n    return (\n      <div className={className} style={{outline: 'none'}} ref={this.container} tabIndex={0}>\n        <ContentContainer>\n          <LineNumbers content={content} />\n          <Content>\n            <SolarizedColors />\n            <Ansi linkify={false} useClasses>\n              {content}\n            </Ansi>\n          </Content>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nconst LineNumbers = (props: IScrollContainerProps) => {\n  const {content} = props;\n  if (!content) {\n    return null;\n  }\n  const matches = content.match(/\\n/g);\n  const count = matches ? matches.length : 0;\n  return (\n    <LineNumberContainer>\n      {Array.from(Array(count), (_, i) => (\n        <div key={i}>{String(i + 1)}</div>\n      ))}\n    </LineNumberContainer>\n  );\n};\n\nconst FileContainer = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n  &:first-child {\n    border-right: 0.5px solid #5c7080;\n  }\n  display: flex;\n  flex-direction: column;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst FileFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 30px;\n  background-color: ${Colors.Gray900};\n  border-top: 0.5px solid #5c7080;\n  color: #aaaaaa;\n  padding: 2px 5px;\n  font-size: 0.85em;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100%;\n  background-color: ${Colors.Gray900};\n`;\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${Colors.Gray900};\n`;\nconst LineNumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-right: 1px solid #5c7080;\n  padding: 10px 10px 10px 20px;\n  margin-right: 5px;\n  background-color: ${Colors.Gray900};\n  opacity: 0.8;\n  color: #858585;\n  min-height: 100%;\n`;\nconst SolarizedColors = createGlobalStyle`\n  .ansi-black {\n    color: #586e75;\n  }\n  .ansi-red {\n    color: #dc322f;\n  }\n  .ansi-green {\n    color: #859900;\n  }\n  .ansi-yellow {\n    color: #b58900;\n  }\n  .ansi-blue {\n    color: #268bd2;\n  }\n  .ansi-magenta {\n    color: #d33682;\n  }\n  .ansi-cyan {\n    color: #2aa198;\n  }\n  .ansi-white {\n    color: #eee8d5;\n  }\n`;\nconst FileContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nconst RelativeContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\nconst LogContent = styled(ScrollContainer)`\n  color: #eeeeee;\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  white-space: pre;\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst FileWarning = styled.div`\n  background-color: #fffae3;\n  padding: 10px 20px;\n  margin: 20px 70px;\n  border-radius: 5px;\n`;\nconst ScrollToast = styled.div`\n  position: absolute;\n  height: 30px;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1;\n`;\nconst ScrollToTop = styled.div`\n  background-color: black;\n  padding: 10px 20px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  color: white;\n  border-bottom: 0.5px solid #5c7080;\n  border-left: 0.5px solid #5c7080;\n  border-right: 0.5px solid #5c7080;\n  cursor: pointer;\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justifycontent: center;\n  alignitems: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  backgroundcolor: ${Colors.Gray800};\n  opacity: 0.3;\n`;\n","import {gql, useSubscription} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ComputeIOType} from '../types/globalTypes';\n\nimport {COMPUTE_LOG_CONTENT_FRAGMENT, MAX_STREAMING_LOG_BYTES} from './ComputeLogContent';\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\nimport {\n  ComputeLogsSubscription,\n  ComputeLogsSubscriptionVariables,\n} from './types/ComputeLogsSubscription';\nimport {ComputeLogsSubscriptionFragment} from './types/ComputeLogsSubscriptionFragment';\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (\n  a: ComputeLogContentFileFragment | null,\n  b: ComputeLogContentFileFragment | null,\n): ComputeLogContentFileFragment | null => {\n  if (!b) {\n    return a;\n  }\n  let data = a?.data;\n  if (a?.data && b?.data) {\n    data = slice(a.data + b.data);\n  } else if (b?.data) {\n    data = slice(b.data);\n  }\n  return {\n    __typename: b.__typename,\n    path: b.path,\n    downloadUrl: b.downloadUrl,\n    data: typeof data === 'string' ? data : null,\n    cursor: b.cursor,\n  };\n};\n\ninterface State {\n  stepKey: string;\n  stdout: ComputeLogsSubscriptionFragment | null;\n  stderr: ComputeLogsSubscriptionFragment | null;\n  isLoading: boolean;\n}\n\ntype Action =\n  | {type: 'stdout'; stepKey: string; log: ComputeLogsSubscriptionFragment | null}\n  | {type: 'stderr'; stepKey: string; log: ComputeLogsSubscriptionFragment | null};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'stdout':\n      const stdout =\n        action.stepKey === state.stepKey ? merge(state.stdout, action.log) : action.log;\n      return {...state, isLoading: false, stdout};\n    case 'stderr':\n      const stderr =\n        action.stepKey === state.stepKey ? merge(state.stderr, action.log) : action.log;\n      return {...state, isLoading: false, stderr};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stepKey: '',\n  stdout: null,\n  stderr: null,\n  isLoading: true,\n};\n\nexport const useComputeLogs = (runId: string, stepKey?: string) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey: stepKey!, ioType: ComputeIOType.STDOUT, cursor: null},\n      skip: !stepKey,\n      onSubscriptionData: ({subscriptionData}) => {\n        if (stepKey) {\n          dispatch({type: 'stdout', stepKey, log: subscriptionData.data?.computeLogs || null});\n        }\n      },\n    },\n  );\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey: stepKey!, ioType: ComputeIOType.STDERR, cursor: null},\n      skip: !stepKey,\n      onSubscriptionData: ({subscriptionData}) => {\n        if (stepKey) {\n          dispatch({type: 'stderr', stepKey, log: subscriptionData.data?.computeLogs || null});\n        }\n      },\n    },\n  );\n\n  return state;\n};\n\nconst COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT = gql`\n  fragment ComputeLogsSubscriptionFragment on ComputeLogFile {\n    data\n    cursor\n    ...ComputeLogContentFileFragment\n  }\n  ${COMPUTE_LOG_CONTENT_FRAGMENT}\n`;\n\nconst COMPUTE_LOGS_SUBSCRIPTION = gql`\n  subscription ComputeLogsSubscription(\n    $runId: ID!\n    $stepKey: String!\n    $ioType: ComputeIOType!\n    $cursor: String\n  ) {\n    computeLogs(runId: $runId, stepKey: $stepKey, ioType: $ioType, cursor: $cursor) {\n      ...ComputeLogsSubscriptionFragment\n    }\n  }\n  ${COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT}\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\n\nimport {ComputeLogContent} from './ComputeLogContent';\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\nimport {useComputeLogs} from './useComputeLogs';\ninterface RunComputeLogs {\n  runId: string;\n  stepKeys: string[];\n  computeLogKey?: string;\n  ioType: string;\n  setComputeLogUrl: (url: string | null) => void;\n}\n\nconst resolveDownloadUrl = (\n  rootServerURI: string,\n  logData: ComputeLogContentFileFragment | null,\n) => {\n  const downloadUrl = logData?.downloadUrl;\n  if (!downloadUrl) {\n    return null;\n  }\n  const isRelativeUrl = (x?: string) => x && x.startsWith('/');\n  return isRelativeUrl(downloadUrl) ? rootServerURI + downloadUrl : downloadUrl;\n};\n\nexport const ComputeLogPanel: React.FC<RunComputeLogs> = React.memo(\n  ({runId, stepKeys, computeLogKey, ioType, setComputeLogUrl}) => {\n    const {rootServerURI} = React.useContext(AppContext);\n    const {isLoading, stdout, stderr} = useComputeLogs(runId, computeLogKey);\n\n    if (!stepKeys.length || !computeLogKey) {\n      return (\n        <Box\n          flex={{justifyContent: 'center', alignItems: 'center'}}\n          style={{flex: 1, height: '100%'}}\n        >\n          <Spinner purpose=\"section\" />\n        </Box>\n      );\n    }\n\n    const logData = ioType === 'stdout' ? stdout : stderr;\n    const downloadUrl = resolveDownloadUrl(rootServerURI, logData);\n\n    return (\n      <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n        <ContentWrapper\n          logData={stdout}\n          isLoading={isLoading}\n          isVisible={ioType === 'stdout'}\n          downloadUrl={downloadUrl}\n          setComputeLogUrl={setComputeLogUrl}\n        />\n        <ContentWrapper\n          logData={stderr}\n          isLoading={isLoading}\n          isVisible={ioType === 'stderr'}\n          downloadUrl={downloadUrl}\n          setComputeLogUrl={setComputeLogUrl}\n        />\n      </div>\n    );\n  },\n);\n\nconst ContentWrapper = ({\n  isLoading,\n  isVisible,\n  logData,\n  downloadUrl,\n  setComputeLogUrl,\n}: {\n  isVisible: boolean;\n  isLoading: boolean;\n  logData: ComputeLogContentFileFragment | null;\n  downloadUrl: string | null;\n  setComputeLogUrl: (url: string | null) => void;\n}) => {\n  React.useEffect(() => {\n    setComputeLogUrl(downloadUrl);\n  }, [setComputeLogUrl, downloadUrl]);\n  return (\n    <ComputeLogContent\n      logData={logData}\n      isLoading={isLoading}\n      isVisible={isVisible}\n      downloadUrl={downloadUrl}\n    />\n  );\n};\n","import {gql, useApolloClient, useQuery, useSubscription} from '@apollo/client';\nimport {TokenizingFieldValue} from '@dagster-io/ui';\nimport throttle from 'lodash/throttle';\nimport * as React from 'react';\n\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {LogLevelCounts} from './LogsToolbar';\nimport {RunFragments} from './RunFragments';\nimport {logNodeLevel} from './logNodeLevel';\nimport {LogNode} from './types';\nimport {\n  PipelineRunLogsSubscription,\n  PipelineRunLogsSubscriptionVariables,\n  PipelineRunLogsSubscription_pipelineRunLogs_PipelineRunLogsSubscriptionSuccess,\n} from './types/PipelineRunLogsSubscription';\nimport {PipelineRunLogsSubscriptionStatusFragment} from './types/PipelineRunLogsSubscriptionStatusFragment';\nimport {RunDagsterRunEventFragment} from './types/RunDagsterRunEventFragment';\nimport {RunLogsQuery, RunLogsQueryVariables} from './types/RunLogsQuery';\n\nexport interface LogFilterValue extends TokenizingFieldValue {\n  token?: 'step' | 'type' | 'query';\n}\n\nexport interface LogFilter {\n  logQuery: LogFilterValue[];\n  levels: {[key: string]: boolean};\n  focusedTime: number;\n  sinceTime: number;\n  hideNonMatches: boolean;\n}\n\nexport interface LogsProviderLogs {\n  allNodes: LogNode[];\n  counts: LogLevelCounts;\n  loading: boolean;\n}\n\nconst pipelineStatusFromMessages = (messages: RunDagsterRunEventFragment[]) => {\n  const reversed = [...messages].reverse();\n  for (const message of reversed) {\n    const {__typename} = message;\n    switch (__typename) {\n      case 'RunStartEvent':\n        return RunStatus.STARTED;\n      case 'RunEnqueuedEvent':\n        return RunStatus.QUEUED;\n      case 'RunStartingEvent':\n        return RunStatus.STARTING;\n      case 'RunCancelingEvent':\n        return RunStatus.CANCELING;\n      case 'RunCanceledEvent':\n        return RunStatus.CANCELED;\n      case 'RunSuccessEvent':\n        return RunStatus.SUCCESS;\n      case 'RunFailureEvent':\n        return RunStatus.FAILURE;\n    }\n  }\n  return null;\n};\n\nconst BATCH_INTERVAL = 100;\nconst QUERY_LOG_LIMIT = 10000;\n\ntype State = {\n  nodes: LogNode[];\n  cursor: string | null;\n  counts: LogLevelCounts;\n  loading: boolean;\n};\n\ntype Action =\n  | {type: 'append'; queued: RunDagsterRunEventFragment[]; hasMore: boolean; cursor: string}\n  | {type: 'set-cursor'; cursor: string}\n  | {type: 'reset'};\n\nconst emptyCounts = {\n  DEBUG: 0,\n  INFO: 0,\n  WARNING: 0,\n  ERROR: 0,\n  CRITICAL: 0,\n  EVENT: 0,\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'append': {\n      const queuedNodes = action.queued.map((node, ii) => ({\n        ...node,\n        clientsideKey: `csk${node.timestamp}-${ii}`,\n      }));\n      const nodes = [...state.nodes, ...queuedNodes];\n      const counts = {...state.counts};\n      queuedNodes.forEach((node) => {\n        const level = logNodeLevel(node);\n        counts[level]++;\n      });\n      return {nodes, counts, loading: action.hasMore, cursor: action.cursor};\n    }\n    case 'set-cursor':\n      return {...state, cursor: action.cursor};\n    case 'reset':\n      return {nodes: [], counts: emptyCounts, cursor: null, loading: true};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  nodes: [],\n  counts: emptyCounts,\n  cursor: null,\n  loading: true,\n};\n\nconst useLogsProviderWithSubscription = (runId: string) => {\n  const client = useApolloClient();\n  const queue = React.useRef<\n    PipelineRunLogsSubscription_pipelineRunLogs_PipelineRunLogsSubscriptionSuccess[]\n  >([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const syncPipelineStatusToApolloCache = React.useCallback(\n    (status: RunStatus) => {\n      const local = client.readFragment<PipelineRunLogsSubscriptionStatusFragment>({\n        fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n        fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n        id: `Run:${runId}`,\n      });\n\n      if (local) {\n        const toWrite = {...local, status};\n        if (\n          status === RunStatus.FAILURE ||\n          status === RunStatus.SUCCESS ||\n          status === RunStatus.STARTING ||\n          status === RunStatus.CANCELING ||\n          status === RunStatus.CANCELED\n        ) {\n          toWrite.canTerminate = false;\n        }\n\n        client.writeFragment({\n          fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n          fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n          id: `Run:${runId}`,\n          data: toWrite,\n        });\n      }\n    },\n    [client, runId],\n  );\n\n  React.useEffect(() => {\n    queue.current = [];\n    dispatch({type: 'reset'});\n  }, [runId]);\n\n  // Batch the nodes together so they don't overwhelm the animation of the Gantt,\n  // which depends on a bit of a timing delay to maintain smoothness.\n  const throttledSetNodes = React.useMemo(() => {\n    return throttle(() => {\n      if (!queue.current.length) {\n        return;\n      }\n      const queuedLogs = [...queue.current];\n      queue.current = [];\n      const queuedMessages = queuedLogs.flatMap((log) => log.messages);\n      const lastLog = queuedLogs[queuedLogs.length - 1];\n      const hasMore = lastLog.hasMorePastEvents;\n      const cursor = lastLog.cursor;\n\n      dispatch({type: 'append', queued: queuedMessages, hasMore, cursor});\n      const nextPipelineStatus = pipelineStatusFromMessages(queuedMessages);\n\n      // If we're still loading past events, don't sync to the cache -- event chunks could\n      // give us `status` values that don't match the actual state of the run.\n      if (nextPipelineStatus && !hasMore) {\n        syncPipelineStatusToApolloCache(nextPipelineStatus);\n      }\n    }, BATCH_INTERVAL);\n  }, [syncPipelineStatusToApolloCache]);\n\n  const {nodes, counts, cursor, loading} = state;\n\n  useSubscription<PipelineRunLogsSubscription, PipelineRunLogsSubscriptionVariables>(\n    PIPELINE_RUN_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, cursor},\n      onSubscriptionData: ({subscriptionData}) => {\n        const logs = subscriptionData.data?.pipelineRunLogs;\n        if (!logs || logs.__typename === 'PipelineRunLogsSubscriptionFailure') {\n          return;\n        }\n        // Maintain a queue of messages as they arrive, and call the throttled setter.\n        queue.current = [...queue.current, logs];\n        // Wait until end of animation frame to call throttled set nodes\n        // otherwise we wont end up batching anything if rendering takes\n        // longer than the BATCH_INTERVAL\n        requestAnimationFrame(throttledSetNodes);\n      },\n    },\n  );\n\n  return React.useMemo(\n    () => (nodes !== null ? {allNodes: nodes, counts, loading} : {allNodes: [], counts, loading}),\n    [counts, loading, nodes],\n  );\n};\n\ninterface LogsProviderProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst LogsProviderWithSubscription: React.FC<LogsProviderProps> = (props) => {\n  const state = useLogsProviderWithSubscription(props.runId);\n  return <>{props.children(state)}</>;\n};\n\ninterface LogsProviderWithQueryProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst POLL_INTERVAL = 5000;\n\nconst LogsProviderWithQuery = (props: LogsProviderWithQueryProps) => {\n  const {children, runId} = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {counts, cursor, nodes} = state;\n\n  const {stopPolling, startPolling} = useQuery<RunLogsQuery, RunLogsQueryVariables>(\n    RUN_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {runId, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: RunLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n\n        if (\n          data?.pipelineRunOrError.__typename !== 'Run' ||\n          data?.logsForRun.__typename !== 'EventConnection'\n        ) {\n          return;\n        }\n\n        const run = data.pipelineRunOrError;\n        const queued = data.logsForRun.events;\n        const status = run.status;\n        const cursor = data.logsForRun.cursor;\n\n        const hasMore =\n          !!status &&\n          status !== RunStatus.FAILURE &&\n          status !== RunStatus.SUCCESS &&\n          status !== RunStatus.CANCELED;\n\n        dispatch({type: 'append', queued, hasMore, cursor});\n\n        if (hasMore) {\n          startPolling(POLL_INTERVAL);\n        }\n      },\n    },\n  );\n\n  return (\n    <>\n      {children(\n        nodes !== null && nodes.length > 0\n          ? {allNodes: nodes, counts, loading: false}\n          : {allNodes: [], counts, loading: true},\n      )}\n    </>\n  );\n};\n\nexport const LogsProvider: React.FC<LogsProviderProps> = (props) => {\n  const {children, runId} = props;\n  const {availability, disabled} = React.useContext(WebSocketContext);\n\n  // if disabled, drop to query variant immediately\n  if (availability === 'unavailable' || disabled) {\n    return <LogsProviderWithQuery runId={runId}>{children}</LogsProviderWithQuery>;\n  }\n\n  if (availability === 'attempting-to-connect') {\n    return <>{children({allNodes: [], counts: emptyCounts, loading: true})}</>;\n  }\n\n  return <LogsProviderWithSubscription runId={runId}>{children}</LogsProviderWithSubscription>;\n};\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION = gql`\n  subscription PipelineRunLogsSubscription($runId: ID!, $cursor: String) {\n    pipelineRunLogs(runId: $runId, cursor: $cursor) {\n      __typename\n      ... on PipelineRunLogsSubscriptionSuccess {\n        messages {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        hasMorePastEvents\n        cursor\n      }\n      ... on PipelineRunLogsSubscriptionFailure {\n        missingRunId\n        message\n      }\n    }\n  }\n\n  ${RunFragments.RunDagsterRunEventFragment}\n`;\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT = gql`\n  fragment PipelineRunLogsSubscriptionStatusFragment on Run {\n    id\n    runId\n    status\n    canTerminate\n  }\n`;\n\nconst RUN_LOGS_QUERY = gql`\n  query RunLogsQuery($runId: ID!, $cursor: String, $limit: Int) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        runId\n        status\n        canTerminate\n      }\n    }\n    logsForRun(runId: $runId, afterCursor: $cursor, limit: $limit) {\n      ... on EventConnection {\n        events {\n          __typename\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        cursor\n      }\n      ... on PythonError {\n        message\n        stack\n      }\n    }\n  }\n  ${RunFragments.RunDagsterRunEventFragment}\n`;\n","import memoize from 'lodash/memoize';\n\nconst compactFormatter = memoize(\n  () =>\n    new Intl.NumberFormat(navigator.language, {\n      compactDisplay: 'short',\n      notation: 'compact',\n    }),\n);\n\nexport const compactNumber = (num: number | bigint): string => compactFormatter().format(num);\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nimport {IStepState} from './RunMetadataProvider';\n\nexport const ExecutionStateDot = styled.div<{state: IStepState}>`\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  border-radius: 5.5px;\n  transition: background 200ms linear;\n  background: ${({state}) =>\n    ({\n      [IStepState.RUNNING]: Colors.Gray400,\n      [IStepState.SUCCEEDED]: Colors.Green700,\n      [IStepState.SKIPPED]: Colors.Yellow500,\n      [IStepState.FAILED]: Colors.Red500,\n      [IStepState.PREPARING]: Colors.Red500,\n      [IStepState.RETRY_REQUESTED]: Colors.Red500,\n      [IStepState.UNKNOWN]: Colors.Red500,\n    }[state])};\n  &:hover {\n    background: ${({state}) =>\n      ({\n        [IStepState.RUNNING]: Colors.Gray400,\n        [IStepState.SUCCEEDED]: Colors.Green700,\n        [IStepState.SKIPPED]: Colors.Yellow500,\n        [IStepState.FAILED]: Colors.Red200,\n        [IStepState.PREPARING]: Colors.Red500,\n        [IStepState.RETRY_REQUESTED]: Colors.Red500,\n        [IStepState.UNKNOWN]: Colors.Red500,\n      }[state])};\n  }\n`;\n","import {\n  Colors,\n  Popover,\n  TextInput,\n  SuggestionProvider,\n  useSuggestionsForString,\n  Icon,\n} from '@dagster-io/ui';\nimport Fuse from 'fuse.js';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ClearButton} from '../ui/ClearButton';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n  suggestionProviders: SuggestionProvider[];\n}\n\ntype Action =\n  | {type: 'show-popover'}\n  | {type: 'hide-popover'}\n  | {type: 'highlight'; highlight: number}\n  | {type: 'change-query'}\n  | {type: 'select-suggestion'};\n\ntype State = {\n  shown: boolean;\n  highlight: number;\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'show-popover':\n      return {...state, shown: true};\n    case 'hide-popover':\n      return {...state, shown: false};\n    case 'highlight':\n      return {...state, highlight: action.highlight};\n    case 'change-query':\n      return {...state, shown: true, highlight: 0};\n    case 'select-suggestion':\n      return {...state, highlight: 0};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  shown: false,\n  highlight: 0,\n};\n\nconst fuseOptions = {\n  threshold: 0.3,\n};\n\nexport const LogsFilterInput: React.FC<Props> = (props) => {\n  const {value, onChange, suggestionProviders} = props;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {shown, highlight} = state;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return provider.token\n        ? {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}}\n        : accum;\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders\n      .map((provider) => provider.token)\n      .filter((token) => token) as string[];\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token in perProvider) {\n        const {fuse, all} = perProvider[token];\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, value);\n\n  const numResults = suggestions.length;\n  const highlightedResult = suggestions[highlight] || null;\n\n  const onInputChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({type: 'change-query'});\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      dispatch({type: 'select-suggestion'});\n      onChange(onSelectSuggestion(suggestion));\n    },\n    [onChange, onSelectSuggestion],\n  );\n\n  const onClear = React.useCallback(() => {\n    dispatch({type: 'change-query'});\n    onChange('');\n    inputRef.current?.focus();\n  }, [onChange]);\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const {key} = e;\n    if (key === 'Escape') {\n      dispatch({type: 'hide-popover'});\n      return;\n    }\n\n    if (!numResults) {\n      return;\n    }\n\n    const lastResult = numResults - 1;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === 0 ? lastResult : highlight - 1});\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === lastResult ? 0 : highlight + 1});\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedResult) {\n          onSelect(highlightedResult);\n        }\n    }\n  };\n  return (\n    <Popover\n      isOpen={shown && suggestions.length > 0}\n      position=\"bottom-left\"\n      content={\n        <Results>\n          {suggestions.map((suggestion, ii) => (\n            <ResultItem\n              key={suggestion}\n              suggestion={suggestion}\n              isHighlight={highlight === ii}\n              onSelect={onSelect}\n            />\n          ))}\n        </Results>\n      }\n    >\n      <FilterInput\n        placeholder=\"Filter…\"\n        spellCheck={false}\n        autoCorrect=\"off\"\n        value={value}\n        ref={inputRef}\n        onChange={onInputChange}\n        onFocus={() => dispatch({type: 'show-popover'})}\n        onBlur={() => dispatch({type: 'hide-popover'})}\n        onKeyDown={onKeyDown}\n        rightElement={\n          <ClearButton onClick={onClear}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst ResultItem: React.FC<{\n  suggestion: string;\n  isHighlight: boolean;\n  onSelect: (suggestion: string) => void;\n}> = (props) => {\n  const {suggestion, isHighlight, onSelect} = props;\n  const element = React.useRef<HTMLLIElement>(null);\n\n  React.useEffect(() => {\n    if (element.current && isHighlight) {\n      element.current.scrollIntoView({block: 'nearest'});\n    }\n  }, [isHighlight]);\n\n  return (\n    <Item\n      ref={element}\n      isHighlight={isHighlight}\n      onMouseDown={(e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        onSelect(suggestion);\n      }}\n    >\n      {suggestion}\n    </Item>\n  );\n};\n\nconst FilterInput = styled(TextInput)`\n  width: 300px;\n`;\n\nconst Results = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 300px;\n  overflow-y: auto;\n  padding: 4px 0;\n`;\n\ninterface HighlightableTextProps {\n  readonly isHighlight: boolean;\n}\n\nconst Item = styled.li<HighlightableTextProps>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.White)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.White : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.Gray100)};\n  }\n`;\n","import * as React from 'react';\n\nexport const useSuggestionsForString = (\n  buildSuggestions: (value: string) => string[],\n  value: string,\n) => {\n  const tokens = value.toLocaleLowerCase().trim().split(/\\s+/);\n  const queryString = tokens[tokens.length - 1] || '';\n\n  const suggestions = React.useMemo(() => buildSuggestions(queryString), [\n    buildSuggestions,\n    queryString,\n  ]);\n\n  const onSelectSuggestion = React.useCallback(\n    (suggestion: string) => {\n      const lastIndex = value.toLocaleLowerCase().lastIndexOf(queryString);\n      if (lastIndex !== -1) {\n        const keep = value.slice(0, lastIndex);\n        return `${keep}${suggestion}`;\n      }\n\n      // Shouldn't really ever fall through to this, since `queryString` should definitely\n      // be the last token in `value`. No-op just in case.\n      return value;\n    },\n    [queryString, value],\n  );\n\n  return React.useMemo(\n    () => ({\n      suggestions,\n      onSelectSuggestion,\n    }),\n    [onSelectSuggestion, suggestions],\n  );\n};\n","import {tokenizedValueFromString} from '@dagster-io/ui';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\nimport {DefaultLogLevels, LogLevel} from './LogLevel';\nimport {LogFilter} from './LogsProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nconst DELIMITER = '|';\n\nfunction levelsToQuery(levels: string[]): string {\n  return levels\n    .sort()\n    .map((key) => key.toLowerCase())\n    .join(DELIMITER);\n}\n\nexport const DefaultQuerystring: {[key: string]: string} = {\n  steps: '*',\n  logs: '',\n  levels: levelsToQuery(DefaultLogLevels),\n  hideNonMatches: 'true',\n  focusedTime: '',\n};\n\n/**\n * Query parameter structure, all optional:\n *\n * `steps`\n *   - string (selection syntax)\n *   - Initializes step selection in Gantt chart\n * `logs`\n *   - string (comma-separated foo:bar tokens or free text)\n *   - Initializes log filter input\n * `levels`\n *   - string (comma-separated values)\n *   - Initializes levels in log filter\n * `focusedTime`\n *   - string (unix timestamp with msec)\n *   - Scrolls directly to log with specified time, if no `logs` filter\n */\nexport const decodeRunPageFilters = (qs: {[key: string]: string}) => {\n  const logValues = qs['logs'].split(DELIMITER);\n  const focusedTime = qs['focusedTime'] && !qs['logs'] ? Number(qs['focusedTime']) : null;\n  const hideNonMatches = qs['hideNonMatches'] === 'true' ? true : false;\n\n  const providers = getRunFilterProviders();\n  const logQuery = logValues.map((token) => tokenizedValueFromString(token, providers));\n\n  const levelsValues = qs['levels'].split(DELIMITER);\n\n  return {\n    sinceTime: 0,\n    focusedTime,\n    hideNonMatches,\n    logQuery,\n    levels: levelsValues\n      .map((level) => level.toUpperCase())\n      .filter((level) => LogLevel.hasOwnProperty(level))\n      .reduce((accum, level) => ({...accum, [level]: true}), {}),\n  } as LogFilter;\n};\n\nexport function encodeRunPageFilters(filter: LogFilter) {\n  const logQueryTokenStrings = filter.logQuery.map((v) =>\n    v.token ? `${v.token}:${v.value}` : v.value,\n  );\n\n  return {\n    hideNonMatches: filter.hideNonMatches ? 'true' : 'false',\n    focusedTime: filter.focusedTime || '',\n    logs: logQueryTokenStrings.join(DELIMITER),\n    levels: levelsToQuery(Object.keys(filter.levels).filter((key) => !!filter.levels[key])),\n  };\n}\n\nexport function useQueryPersistedLogFilter() {\n  return useQueryPersistedState<LogFilter>({\n    encode: encodeRunPageFilters,\n    decode: decodeRunPageFilters,\n    defaults: DefaultQuerystring,\n  });\n}\n","import {Box, NonIdealState, FirstOrSecondPanelToggle, SplitPanelContainer} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {GanttChart, GanttChartLoadingState, GanttChartMode, QueuedState} from '../gantt/GanttChart';\nimport {toGraphQueryItems} from '../gantt/toGraphQueryItems';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useFavicon} from '../hooks/useFavicon';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {ComputeLogPanel} from './ComputeLogPanel';\nimport {LogFilter, LogsProvider, LogsProviderLogs} from './LogsProvider';\nimport {LogsScrollingTable} from './LogsScrollingTable';\nimport {LogsToolbar, LogType} from './LogsToolbar';\nimport {RunActionButtons} from './RunActionButtons';\nimport {RunContext} from './RunContext';\nimport {IRunMetadataDict, RunMetadataProvider} from './RunMetadataProvider';\nimport {\n  RunDagsterRunEventFragment,\n  RunDagsterRunEventFragment_ExecutionStepFailureEvent,\n} from './types/RunDagsterRunEventFragment';\nimport {RunFragment} from './types/RunFragment';\nimport {useJobReExecution} from './useJobReExecution';\nimport {useQueryPersistedLogFilter} from './useQueryPersistedLogFilter';\n\ninterface RunProps {\n  runId: string;\n  run?: RunFragment;\n}\n\nconst runStatusFavicon = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return '/favicon-run-failed.svg';\n    case RunStatus.SUCCESS:\n      return '/favicon-run-success.svg';\n    default:\n      return '/favicon-run-pending.svg';\n  }\n};\n\nexport const Run: React.FC<RunProps> = (props) => {\n  const {run, runId} = props;\n  const [logsFilter, setLogsFilter] = useQueryPersistedLogFilter();\n  const [selectionQuery, setSelectionQuery] = useQueryPersistedState<string>({\n    queryKey: 'selection',\n    defaults: {selection: ''},\n  });\n\n  useFavicon(run ? runStatusFavicon(run.status) : '/favicon.svg');\n  useDocumentTitle(\n    run\n      ? `${!isHiddenAssetGroupJob(run.pipelineName) ? run.pipelineName : ''} ${runId.slice(\n          0,\n          8,\n        )} [${run.status}]`\n      : `Run: ${runId}`,\n  );\n\n  const onShowStateDetails = (stepKey: string, logs: RunDagsterRunEventFragment[]) => {\n    const errorNode = logs.find(\n      (node) => node.__typename === 'ExecutionStepFailureEvent' && node.stepKey === stepKey,\n    ) as RunDagsterRunEventFragment_ExecutionStepFailureEvent;\n\n    if (errorNode) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={errorNode} />,\n      });\n    }\n  };\n\n  const onSetSelectionQuery = (query: string) => {\n    setSelectionQuery(query);\n    setLogsFilter({\n      ...logsFilter,\n      logQuery: query !== '*' ? [{token: 'query', value: query}] : [],\n    });\n  };\n\n  return (\n    <RunContext.Provider value={run}>\n      <LogsProvider key={runId} runId={runId}>\n        {(logs) => (\n          <RunMetadataProvider logs={logs}>\n            {(metadata) => (\n              <RunWithData\n                run={run}\n                runId={runId}\n                logs={logs}\n                logsFilter={logsFilter}\n                metadata={metadata}\n                selectionQuery={selectionQuery}\n                onSetLogsFilter={setLogsFilter}\n                onSetSelectionQuery={onSetSelectionQuery}\n                onShowStateDetails={onShowStateDetails}\n              />\n            )}\n          </RunMetadataProvider>\n        )}\n      </LogsProvider>\n    </RunContext.Provider>\n  );\n};\n\ninterface RunWithDataProps {\n  run?: RunFragment;\n  runId: string;\n  selectionQuery: string;\n  logs: LogsProviderLogs;\n  logsFilter: LogFilter;\n  metadata: IRunMetadataDict;\n  onSetLogsFilter: (v: LogFilter) => void;\n  onSetSelectionQuery: (query: string) => void;\n  onShowStateDetails: (stepKey: string, logs: RunDagsterRunEventFragment[]) => void;\n}\n\nconst logTypeFromQuery = (queryLogType: string) => {\n  switch (queryLogType) {\n    case 'stdout':\n      return LogType.stdout;\n    case 'stderr':\n      return LogType.stderr;\n    default:\n      return LogType.structured;\n  }\n};\n\n/**\n * Note: There are two places we keep a \"step query string\" in the Run view:\n * selectionQuery and logsFilter.logsQuery.\n *\n * - selectionQuery is set when you click around in the Gannt view and is the\n *   selection used for re-execution, etc. When set, we autofill logsFilter.logsQuery.\n *\n * - logsFilter.logsQuery is used for filtering the logs. It can be cleared separately\n *   from the selectionQuery, so you can select a step but navigate elsewhere in the logs.\n *\n * We could revisit this in the future but I believe we iterated quite a bit to get to this\n * solution and we should avoid locking the two filter inputs together completely.\n */\nconst RunWithData: React.FC<RunWithDataProps> = ({\n  run,\n  runId,\n  logs,\n  logsFilter,\n  metadata,\n  selectionQuery,\n  onSetLogsFilter,\n  onSetSelectionQuery,\n}) => {\n  const onLaunch = useJobReExecution(run);\n  const splitPanelContainer = React.createRef<SplitPanelContainer>();\n\n  const [queryLogType, setQueryLogType] = useQueryPersistedState<string>({\n    queryKey: 'logType',\n    defaults: {logType: 'structured'},\n  });\n\n  const [computeLogKey, setComputeLogKey] = useQueryPersistedState<string>({\n    queryKey: 'logKey',\n  });\n\n  const logType = logTypeFromQuery(queryLogType);\n  const setLogType = (lt: LogType) => setQueryLogType(LogType[lt]);\n  const [computeLogUrl, setComputeLogUrl] = React.useState<string | null>(null);\n\n  const stepKeysJSON = JSON.stringify(Object.keys(metadata.steps).sort());\n  const stepKeys = React.useMemo(() => JSON.parse(stepKeysJSON), [stepKeysJSON]);\n\n  const runtimeGraph = run?.executionPlan && toGraphQueryItems(run?.executionPlan, metadata.steps);\n\n  const selectionStepKeys = React.useMemo(() => {\n    return runtimeGraph && selectionQuery && selectionQuery !== '*'\n      ? filterByQuery(runtimeGraph, selectionQuery).all.map((n) => n.name)\n      : [];\n  }, [runtimeGraph, selectionQuery]);\n\n  React.useEffect(() => {\n    if (!stepKeys?.length || computeLogKey) {\n      return;\n    }\n\n    if (metadata.logCaptureSteps) {\n      const logKeys = Object.keys(metadata.logCaptureSteps);\n      const selectedLogKey = logKeys.find((logKey) => {\n        return selectionStepKeys.every(\n          (stepKey) =>\n            metadata.logCaptureSteps && metadata.logCaptureSteps[logKey].stepKeys.includes(stepKey),\n        );\n      });\n      setComputeLogKey(selectedLogKey || logKeys[0]);\n    } else if (!stepKeys.includes(computeLogKey)) {\n      setComputeLogKey(selectionStepKeys.length === 1 ? selectionStepKeys[0] : stepKeys[0]);\n    } else if (selectionStepKeys.length === 1 && computeLogKey !== selectionStepKeys[0]) {\n      setComputeLogKey(selectionStepKeys[0]);\n    }\n  }, [stepKeys, computeLogKey, selectionStepKeys, metadata.logCaptureSteps, setComputeLogKey]);\n\n  const onSetComputeLogKey = (logKey: string) => {\n    setComputeLogKey(logKey);\n  };\n\n  const logsFilterStepKeys = runtimeGraph\n    ? logsFilter.logQuery\n        .filter((v) => v.token && v.token === 'query')\n        .reduce((accum, v) => {\n          return [...accum, ...filterByQuery(runtimeGraph, v.value).all.map((n) => n.name)];\n        }, [] as string[])\n    : [];\n\n  const onClickStep = (stepKey: string, evt: React.MouseEvent<any>) => {\n    const index = selectionStepKeys.indexOf(stepKey);\n    let newSelected: string[];\n    const filterForExactStep = `\"${stepKey}\"`;\n    if (evt.shiftKey) {\n      // shift-click to multi select steps, preserving quotations if present\n      newSelected = [\n        ...selectionStepKeys.map((k) => (selectionQuery.includes(`\"${k}\"`) ? `\"${k}\"` : k)),\n      ];\n\n      if (index !== -1) {\n        // deselect the step if already selected\n        newSelected.splice(index, 1);\n      } else {\n        // select the step otherwise\n        newSelected.push(filterForExactStep);\n      }\n    } else {\n      if (selectionStepKeys.length === 1 && index !== -1) {\n        // deselect the step if already selected\n        newSelected = [];\n      } else {\n        // select the step otherwise\n        newSelected = [filterForExactStep];\n\n        // When only one step is selected, set the compute log key as well.\n        setComputeLogKey(stepKey);\n      }\n    }\n\n    onSetSelectionQuery(newSelected.join(', ') || '*');\n  };\n\n  const gantt = (metadata: IRunMetadataDict) => {\n    if (!run) {\n      return <GanttChartLoadingState runId={runId} />;\n    }\n\n    if (run.status === 'QUEUED') {\n      return <QueuedState run={run} />;\n    }\n\n    if (run.executionPlan && runtimeGraph) {\n      return (\n        <GanttChart\n          options={{\n            mode: GanttChartMode.WATERFALL_TIMED,\n          }}\n          toolbarActions={\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n              <FirstOrSecondPanelToggle axis=\"vertical\" container={splitPanelContainer} />\n              <RunActionButtons\n                run={run}\n                onLaunch={onLaunch}\n                graph={runtimeGraph}\n                metadata={metadata}\n                selection={{query: selectionQuery, keys: selectionStepKeys}}\n              />\n            </Box>\n          }\n          runId={runId}\n          graph={runtimeGraph}\n          metadata={metadata}\n          selection={{query: selectionQuery, keys: selectionStepKeys}}\n          onClickStep={onClickStep}\n          onSetSelection={onSetSelectionQuery}\n          focusedTime={logsFilter.focusedTime}\n        />\n      );\n    }\n\n    return <NonIdealState icon=\"error\" title=\"Unable to build execution plan\" />;\n  };\n\n  return (\n    <>\n      <SplitPanelContainer\n        ref={splitPanelContainer}\n        axis=\"vertical\"\n        identifier=\"run-gantt\"\n        firstInitialPercent={35}\n        firstMinSize={56}\n        first={gantt(metadata)}\n        second={\n          <LogsContainer>\n            <LogsToolbar\n              logType={logType}\n              onSetLogType={setLogType}\n              filter={logsFilter}\n              onSetFilter={onSetLogsFilter}\n              steps={stepKeys}\n              metadata={metadata}\n              computeLogKey={computeLogKey}\n              onSetComputeLogKey={onSetComputeLogKey}\n              computeLogUrl={computeLogUrl}\n              counts={logs.counts}\n            />\n            {logType !== LogType.structured ? (\n              <ComputeLogPanel\n                runId={runId}\n                stepKeys={stepKeys}\n                computeLogKey={computeLogKey}\n                ioType={LogType[logType]}\n                setComputeLogUrl={setComputeLogUrl}\n              />\n            ) : (\n              <LogsScrollingTable\n                logs={logs}\n                filter={logsFilter}\n                filterStepKeys={logsFilterStepKeys}\n                filterKey={`${JSON.stringify(logsFilter)}`}\n                metadata={metadata}\n              />\n            )}\n          </LogsContainer>\n        }\n      />\n    </>\n  );\n};\n\nconst LogsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n","import * as React from 'react';\n\nexport const useFavicon = (href: string) => {\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"][type=\"image/svg+xml\"]');\n    if (!el) {\n      return;\n    }\n    const previousHref = el.getAttribute('href');\n    el.setAttribute('href', href);\n    return () => {\n      if (previousHref) {\n        el.setAttribute('href', previousHref);\n      }\n    };\n  }, [href]);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, NonIdealState, PageHeader, Popover, Tag, Heading, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {Run} from './Run';\nimport {RunAssetKeyTags} from './RunAssetKeyTags';\nimport {RunConfigDialog, RunDetails} from './RunDetails';\nimport {RunFragments} from './RunFragments';\nimport {RunStatusTag} from './RunStatusTag';\nimport {assetKeysForRun} from './RunUtils';\nimport {RunRootQuery, RunRootQueryVariables} from './types/RunRootQuery';\n\nexport const RunRoot = () => {\n  useTrackPageView();\n\n  const {runId} = useParams<{runId: string}>();\n\n  const {data, loading} = useQuery<RunRootQuery, RunRootQueryVariables>(RUN_ROOT_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    variables: {runId},\n  });\n\n  const run = data?.pipelineRunOrError.__typename === 'Run' ? data.pipelineRunOrError : null;\n  const snapshotID = run?.pipelineSnapshotId;\n\n  const repoMatch = useRepositoryForRun(run);\n  const repoAddress = repoMatch?.match\n    ? buildRepoAddress(repoMatch.match.repository.name, repoMatch.match.repositoryLocation.name)\n    : null;\n\n  const isJob = React.useMemo(\n    () => !!(run && repoMatch && isThisThingAJob(repoMatch.match, run.pipelineName)),\n    [run, repoMatch],\n  );\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        flex={{direction: 'row', alignItems: 'flex-start'}}\n        style={{\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <PageHeader\n          title={\n            <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n              {runId.slice(0, 8)}\n            </Heading>\n          }\n          tags={\n            run ? (\n              <>\n                <RunStatusTag status={run.status} />\n                {isHiddenAssetGroupJob(run.pipelineName) ? (\n                  <RunAssetKeyTags assetKeys={assetKeysForRun(run)} clickableTags />\n                ) : (\n                  <>\n                    <Tag icon=\"run\">\n                      Run of{' '}\n                      <PipelineReference\n                        pipelineName={run?.pipelineName}\n                        pipelineHrefContext={repoAddress || 'repo-unknown'}\n                        snapshotId={snapshotID}\n                        size=\"small\"\n                        isJob={isJob}\n                      />\n                    </Tag>\n                    <RunAssetKeyTags assetKeys={run.assets.map((a) => a.key)} clickableTags />\n                  </>\n                )}\n                <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n                  {run?.startTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"schedule\">\n                        <TimestampDisplay\n                          timestamp={run.startTime}\n                          timeFormat={{showSeconds: true, showTimezone: false}}\n                        />\n                      </Tag>\n                    </Popover>\n                  ) : run.updateTime ? (\n                    <Tag icon=\"schedule\">\n                      <TimestampDisplay\n                        timestamp={run.updateTime}\n                        timeFormat={{showSeconds: true, showTimezone: false}}\n                      />\n                    </Tag>\n                  ) : undefined}\n                  {run?.startTime && run?.endTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"timer\">\n                        <span style={{fontVariantNumeric: 'tabular-nums'}}>\n                          {run?.startTime\n                            ? formatElapsedTime(\n                                (run?.endTime * 1000 || Date.now()) - run?.startTime * 1000,\n                              )\n                            : '–'}\n                        </span>\n                      </Tag>\n                    </Popover>\n                  ) : null}\n                </Box>\n              </>\n            ) : null\n          }\n          right={run ? <RunConfigDialog run={run} isJob={isJob} /> : null}\n        />\n      </Box>\n      <RunById data={data} runId={runId} />\n    </div>\n  );\n};\n\nconst RunById: React.FC<{data: RunRootQuery | undefined; runId: string}> = (props) => {\n  const {data, runId} = props;\n\n  if (!data || !data.pipelineRunOrError) {\n    return <Run run={undefined} runId={runId} />;\n  }\n\n  if (data.pipelineRunOrError.__typename !== 'Run') {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No run found\"\n          description=\"The run with this ID does not exist or has been cleaned up.\"\n        />\n      </Box>\n    );\n  }\n\n  return <Run run={data.pipelineRunOrError} runId={runId} />;\n};\n\nconst RUN_ROOT_QUERY = gql`\n  query RunRootQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on Run {\n        id\n        ...RunFragment\n      }\n    }\n  }\n\n  ${RunFragments.RunFragment}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Tabs, TokenizingFieldValue} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {RunStatus} from '../types/globalTypes';\nimport {TabLink} from '../ui/TabLink';\n\nimport {doneStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {\n  runsFilterForSearchTokens,\n  runsPathWithFilters,\n  useQueryPersistedRunFilters,\n} from './RunsFilterInput';\nimport {RunTabsCountQuery, RunTabsCountQueryVariables} from './types/RunTabsCountQuery';\n\nexport const RunListTabs = React.memo(() => {\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const runsFilter = runsFilterForSearchTokens(filterTokens);\n\n  const {data} = useQuery<RunTabsCountQuery, RunTabsCountQueryVariables>(RUN_TABS_COUNT_QUERY, {\n    variables: {\n      queuedFilter: {...runsFilter, statuses: Array.from(queuedStatuses)},\n      inProgressFilter: {...runsFilter, statuses: Array.from(inProgressStatuses)},\n    },\n  });\n\n  const counts = React.useMemo(() => {\n    return {\n      queued: data?.queuedCount?.__typename === 'Runs' ? data.queuedCount.count : null,\n      inProgress: data?.inProgressCount?.__typename === 'Runs' ? data.inProgressCount.count : null,\n    };\n  }, [data]);\n\n  const selectedTab = useSelectedRunsTab(filterTokens);\n\n  const urlForStatus = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    return runsPathWithFilters([...statusTokens, ...tokensMinusStatus]);\n  };\n\n  return (\n    <Tabs selectedTabId={selectedTab} id=\"run-tabs\">\n      <TabLink title=\"All runs\" to={urlForStatus([])} id=\"all\" />\n      <TabLink\n        title=\"Queued\"\n        count={counts.queued ?? 'indeterminate'}\n        to={urlForStatus(Array.from(queuedStatuses))}\n        id=\"queued\"\n      />\n      <TabLink\n        title=\"In progress\"\n        count={counts.inProgress ?? 'indeterminate'}\n        to={urlForStatus(Array.from(inProgressStatuses))}\n        id=\"in-progress\"\n      />\n      <TabLink title=\"Done\" to={urlForStatus(Array.from(doneStatuses))} id=\"done\" />\n      <TabLink title=\"Scheduled\" to=\"/instance/runs/scheduled\" id=\"scheduled\" />\n    </Tabs>\n  );\n});\n\nexport const useSelectedRunsTab = (filterTokens: TokenizingFieldValue[]) => {\n  const {pathname} = useLocation();\n  if (pathname === '/instance/runs/timeline') {\n    return 'timeline';\n  }\n  if (pathname === '/instance/runs/scheduled') {\n    return 'scheduled';\n  }\n\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(doneStatuses, statusTokens)) {\n    return 'done';\n  }\n  return 'all';\n};\n\nconst RUN_TABS_COUNT_QUERY = gql`\n  query RunTabsCountQuery($queuedFilter: RunsFilter!, $inProgressFilter: RunsFilter!) {\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ... on Runs {\n        count\n      }\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        count\n      }\n    }\n  }\n`;\n","import {ApolloError, gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  Colors,\n  CursorHistoryControls,\n  NonIdealState,\n  Page,\n  PageHeader,\n  Tag,\n  Heading,\n  tokenToString,\n} from '@dagster-io/ui';\nimport partition from 'lodash/partition';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {InstancePageContext} from '../instance/InstancePageContext';\nimport {useCanSeeConfig} from '../instance/useCanSeeConfig';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\n\nimport {RunListTabs, useSelectedRunsTab} from './RunListTabs';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from './RunTable';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {\n  RunFilterTokenType,\n  RunsFilterInput,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  RunFilterToken,\n} from './RunsFilterInput';\nimport {QueueDaemonStatusQuery} from './types/QueueDaemonStatusQuery';\nimport {RunsRootQuery, RunsRootQueryVariables} from './types/RunsRootQuery';\nimport {useCursorPaginatedQuery} from './useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 25;\n\nexport const RunsRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Runs');\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n  const canSeeConfig = useCanSeeConfig();\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    RunsRootQuery,\n    RunsRootQueryVariables\n  >({\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.runId;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n    variables: {\n      filter,\n    },\n    query: RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const currentTab = useSelectedRunsTab(filterTokens);\n  const staticStatusTags = currentTab !== 'all';\n  const [statusTokens, nonStatusTokens] = partition(\n    filterTokens,\n    (token) => token.token === 'status',\n  );\n\n  const setFilterTokensWithStatus = React.useCallback(\n    (tokens: RunFilterToken[]) => {\n      if (staticStatusTags) {\n        setFilterTokens([...statusTokens, ...tokens]);\n      } else {\n        setFilterTokens(tokens);\n      }\n    },\n    [setFilterTokens, staticStatusTags, statusTokens],\n  );\n\n  const onAddTag = React.useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!nonStatusTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokensWithStatus([...nonStatusTokens, token]);\n      }\n    },\n    [nonStatusTokens, setFilterTokensWithStatus],\n  );\n\n  const enabledFilters = React.useMemo(() => {\n    const filters: RunFilterTokenType[] = ['tag', 'snapshotId', 'id', 'job', 'pipeline'];\n\n    if (!staticStatusTags) {\n      filters.push('status');\n    }\n\n    return filters;\n  }, [staticStatusTags]);\n\n  const mutableTokens = React.useMemo(() => {\n    if (staticStatusTags) {\n      return filterTokens.filter((token) => token.token !== 'status');\n    }\n    return filterTokens;\n  }, [filterTokens, staticStatusTags]);\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>Runs</Heading>}\n        tabs={\n          <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n            <RunListTabs />\n            <Box padding={{bottom: 8}}>\n              <QueryRefreshCountdown refreshState={refreshState} />\n            </Box>\n          </Box>\n        }\n      />\n      {currentTab === 'queued' && canSeeConfig ? (\n        <Box\n          flex={{direction: 'column', gap: 8}}\n          padding={{horizontal: 24, vertical: 16}}\n          border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n        >\n          <Alert\n            intent=\"info\"\n            title={<Link to=\"/instance/config#run_coordinator\">View queue configuration</Link>}\n          />\n          <QueueDaemonAlert />\n        </Box>\n      ) : null}\n      <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n        <Loading\n          queryResult={queryResult}\n          allowStaleData\n          renderError={(error: ApolloError) => {\n            // In this case, a 400 is most likely due to invalid run filters, which are a GraphQL\n            // validation error but surfaced as a 400.\n            const badRequest = !!(\n              error?.networkError &&\n              'statusCode' in error.networkError &&\n              error.networkError.statusCode === 400\n            );\n            return (\n              <Box\n                flex={{direction: 'column', gap: 32}}\n                padding={{vertical: 8, left: 24, right: 12}}\n              >\n                <RunsFilterInput\n                  tokens={mutableTokens}\n                  onChange={setFilterTokensWithStatus}\n                  loading={queryResult.loading}\n                  enabledFilters={enabledFilters}\n                />\n                <NonIdealState\n                  icon=\"warning\"\n                  title={badRequest ? 'Invalid run filters' : 'Unexpected error'}\n                  description={\n                    badRequest\n                      ? 'The specified run filters are not valid. Please check the filters and try again.'\n                      : 'An unexpected error occurred. Check the console for details.'\n                  }\n                />\n              </Box>\n            );\n          }}\n        >\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n\n            return (\n              <>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={pipelineRunsOrError.results.slice(0, PAGE_SIZE)}\n                    onAddTag={onAddTag}\n                    filter={filter}\n                    actionBarComponents={\n                      <Box flex={{direction: 'column', gap: 8}}>\n                        {currentTab !== 'all' ? (\n                          <Box flex={{direction: 'row', gap: 8}}>\n                            {filterTokens\n                              .filter((token) => token.token === 'status')\n                              .map(({token, value}) => (\n                                <Tag key={token}>{`${token}:${value}`}</Tag>\n                              ))}\n                          </Box>\n                        ) : null}\n                        <RunsFilterInput\n                          tokens={mutableTokens}\n                          onChange={setFilterTokensWithStatus}\n                          loading={queryResult.loading}\n                          enabledFilters={enabledFilters}\n                        />\n                      </Box>\n                    }\n                  />\n                </StickyTableContainer>\n                {pipelineRunsOrError.results.length > 0 ? (\n                  <div style={{marginTop: '16px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </RunsQueryRefetchContext.Provider>\n    </Page>\n  );\n};\n\nconst RUNS_ROOT_QUERY = gql`\n  query RunsRootQuery($limit: Int, $cursor: String, $filter: RunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst QueueDaemonAlert = () => {\n  const {data} = useQuery<QueueDaemonStatusQuery>(QUEUE_DAEMON_STATUS_QUERY);\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const status = data?.instance.daemonHealth.daemonStatus;\n  if (status?.required && !status?.healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The queued run coordinator is not healthy.\"\n        description={\n          <div>\n            View <Link to=\"/instance/health\">{pageTitle}</Link> for details.\n          </div>\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst QUEUE_DAEMON_STATUS_QUERY = gql`\n  query QueueDaemonStatusQuery {\n    instance {\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"QUEUED_RUN_COORDINATOR\") {\n          id\n          daemonType\n          healthy\n          required\n        }\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Page, PageHeader, Heading, Alert, ButtonLink, Colors, Group} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {REPOSITORY_SCHEDULES_FRAGMENT} from '../schedules/ScheduleUtils';\nimport {SchedulerInfo} from '../schedules/SchedulerInfo';\nimport {SchedulesNextTicks} from '../schedules/SchedulesNextTicks';\nimport {Loading} from '../ui/Loading';\n\nimport {RunListTabs} from './RunListTabs';\nimport {SchedulerInfoQuery} from './types/SchedulerInfoQuery';\n\nexport const ScheduledRunListRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Scheduled runs');\n\n  const queryResult = useQuery<SchedulerInfoQuery>(SCHEDULER_INFO_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  return (\n    <Page>\n      <PageHeader title={<Heading>Runs</Heading>} tabs={<RunListTabs />} />\n      <Loading queryResult={queryResult}>\n        {(result) => {\n          const {repositoriesOrError, instance} = result;\n          if (repositoriesOrError.__typename === 'PythonError') {\n            const message = repositoriesOrError.message;\n            return (\n              <Alert\n                intent=\"warning\"\n                title={\n                  <Group direction=\"row\" spacing={4}>\n                    <div>Could not load scheduled ticks.</div>\n                    <ButtonLink\n                      color={Colors.Link}\n                      underline=\"always\"\n                      onClick={() => {\n                        showCustomAlert({\n                          title: 'Python error',\n                          body: message,\n                        });\n                      }}\n                    >\n                      View error\n                    </ButtonLink>\n                  </Group>\n                }\n              />\n            );\n          }\n          return (\n            <Group direction=\"column\" spacing={24}>\n              <SchedulerInfo daemonHealth={instance.daemonHealth} />\n              <SchedulesNextTicks repos={repositoriesOrError.nodes} />\n            </Group>\n          );\n        }}\n      </Loading>\n    </Page>\n  );\n};\n\nconst SCHEDULER_INFO_QUERY = gql`\n  query SchedulerInfoQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      ... on RepositoryConnection {\n        nodes {\n          __typename\n          id\n          ... on Repository {\n            ...RepositorySchedulesFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_SCHEDULES_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {PageHeader, Tabs, Tag, Heading, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {explorerPathToString, ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {useActivePipelineForName} from '../workspace/WorkspaceContext';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {SnapshotQuery, SnapshotQueryVariables} from './types/SnapshotQuery';\n\nconst SNAPSHOT_PARENT_QUERY = gql`\n  query SnapshotQuery($snapshotId: String!) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId) {\n      ... on PipelineSnapshot {\n        id\n        parentSnapshotId\n      }\n    }\n  }\n`;\n\ninterface SnapshotNavProps {\n  activeTab?: string;\n  explorerPath: ExplorerPath;\n}\n\nexport const SnapshotNav = (props: SnapshotNavProps) => {\n  const {activeTab = '', explorerPath} = props;\n  const {pipelineName, snapshotId = ''} = explorerPath;\n  const explorerPathString = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const currentPipelineState = useActivePipelineForName(pipelineName);\n  const isJob = !!currentPipelineState?.isJob;\n  const currentSnapshotID = currentPipelineState?.pipelineSnapshotId;\n\n  const {data, loading} = useQuery<SnapshotQuery, SnapshotQueryVariables>(SNAPSHOT_PARENT_QUERY, {\n    variables: {snapshotId},\n  });\n\n  const tag = () => {\n    if (loading) {\n      return (\n        <Tag intent=\"none\" minimal>\n          ...\n        </Tag>\n      );\n    }\n\n    if (\n      !currentSnapshotID ||\n      (currentSnapshotID !== snapshotId &&\n        data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n        data?.pipelineSnapshotOrError?.parentSnapshotId !== currentSnapshotID)\n    ) {\n      return (\n        <Tag intent=\"warning\" minimal>\n          Snapshot\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag intent=\"success\" minimal>\n        Current\n      </Tag>\n    );\n  };\n\n  const tabs = [\n    {\n      text: 'Definition',\n      pathComponent: '',\n      href: `/instance/snapshots/${explorerPathString}`,\n    },\n    {\n      text: 'Runs',\n      pathComponent: 'runs',\n      href: `/instance/snapshots/${explorerPathString}runs`,\n    },\n  ];\n\n  return (\n    <PageHeader\n      title={\n        <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n          {explorerPath.snapshotId?.slice(0, 8)}\n        </Heading>\n      }\n      tags={\n        <>\n          <Tag icon=\"schema\">\n            Snapshot of{' '}\n            <Link to={workspacePipelinePathGuessRepo(explorerPath.pipelineName, isJob)}>\n              {explorerPath.pipelineName}\n            </Link>\n          </Tag>\n          {tag()}\n        </>\n      }\n      tabs={\n        <Tabs selectedTabId={activeTab}>\n          {tabs.map((tab) => {\n            const {href, text, pathComponent} = tab;\n            return <TabLink key={text} id={pathComponent} title={text} to={href} />;\n          })}\n        </Tabs>\n      }\n    />\n  );\n};\n","import * as React from 'react';\nimport {Route, Switch, useParams} from 'react-router-dom';\n\nimport {PipelineExplorerSnapshotRoot} from '../pipelines/PipelineExplorerRoot';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {PipelineRunsRoot} from '../pipelines/PipelineRunsRoot';\n\nimport {SnapshotNav} from './SnapshotNav';\n\nexport const SnapshotRoot = () => {\n  const {pipelinePath, tab} = useParams<{\n    pipelinePath: string;\n    tab?: string;\n  }>();\n  const explorerPath = explorerPathFromString(pipelinePath);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <SnapshotNav activeTab={tab} explorerPath={explorerPath} />\n      <Switch>\n        <Route path=\"/instance/snapshots/:pipelinePath/runs\">\n          <PipelineRunsRoot />\n        </Route>\n        <Route path=\"/instance/snapshots/(/?.*)\">\n          <PipelineExplorerSnapshotRoot />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  CursorPaginationControls,\n  NonIdealState,\n  PageHeader,\n  Heading,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useCursorPaginatedQuery} from '../runs/useCursorPaginatedQuery';\nimport {Loading} from '../ui/Loading';\n\nimport {BACKFILL_TABLE_FRAGMENT, BackfillTable} from './BackfillTable';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {\n  InstanceBackfillsQuery,\n  InstanceBackfillsQueryVariables,\n} from './types/InstanceBackfillsQuery';\nimport {InstanceHealthForBackfillsQuery} from './types/InstanceHealthForBackfillsQuery';\n\nconst PAGE_SIZE = 10;\n\nexport const InstanceBackfills = () => {\n  useTrackPageView();\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceHealthForBackfillsQuery>(INSTANCE_HEALTH_FOR_BACKFILLS_QUERY);\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    InstanceBackfillsQuery,\n    InstanceBackfillsQueryVariables\n  >({\n    query: BACKFILLS_QUERY,\n    variables: {},\n    pageSize: PAGE_SIZE,\n    nextCursorForResult: (result) =>\n      result.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n        ? result.partitionBackfillsOrError.results[PAGE_SIZE - 1]?.backfillId\n        : undefined,\n    getResultArray: (result) =>\n      result?.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n        ? result.partitionBackfillsOrError.results\n        : [],\n  });\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  useDocumentTitle('Backfills');\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"backfills\" refreshState={refreshState} />}\n      />\n      <Loading queryResult={queryResult} allowStaleData={true}>\n        {({partitionBackfillsOrError}) => {\n          if (partitionBackfillsOrError.__typename === 'PythonError') {\n            return <PythonErrorInfo error={partitionBackfillsOrError} />;\n          }\n\n          if (!partitionBackfillsOrError.results.length) {\n            return (\n              <Box padding={{vertical: 64}}>\n                <NonIdealState\n                  icon=\"no-results\"\n                  title=\"No backfills found\"\n                  description={<p>This instance does not have any backfill jobs.</p>}\n                />\n              </Box>\n            );\n          }\n\n          const daemonHealths = queryData.data?.instance.daemonHealth.allDaemonStatuses || [];\n          const backfillHealths = daemonHealths\n            .filter((daemon) => daemon.daemonType === 'BACKFILL')\n            .map((daemon) => daemon.required && daemon.healthy);\n          const isBackfillHealthy = backfillHealths.length && backfillHealths.every((x) => x);\n          return (\n            <div>\n              {isBackfillHealthy ? null : (\n                <Box padding={{horizontal: 24, vertical: 16}}>\n                  <Alert\n                    intent=\"warning\"\n                    title=\"The backfill daemon is not running.\"\n                    description={\n                      <div>\n                        See the{' '}\n                        <a\n                          href=\"https://docs.dagster.io/deployment/dagster-daemon\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          dagster-daemon documentation\n                        </a>{' '}\n                        for more information on how to deploy the dagster-daemon process.\n                      </div>\n                    }\n                  />\n                </Box>\n              )}\n              <BackfillTable\n                backfills={partitionBackfillsOrError.results.slice(0, PAGE_SIZE)}\n                refetch={queryResult.refetch}\n              />\n              {partitionBackfillsOrError.results.length > 0 ? (\n                <div style={{marginTop: '16px'}}>\n                  <CursorPaginationControls {...paginationProps} />\n                </div>\n              ) : null}\n            </div>\n          );\n        }}\n      </Loading>\n    </>\n  );\n};\n\nconst INSTANCE_HEALTH_FOR_BACKFILLS_QUERY = gql`\n  query InstanceHealthForBackfillsQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n\nconst BACKFILLS_QUERY = gql`\n  query InstanceBackfillsQuery($cursor: String, $limit: Int) {\n    partitionBackfillsOrError(cursor: $cursor, limit: $limit) {\n      ... on PartitionBackfills {\n        results {\n          backfillId\n          status\n          backfillStatus\n          numRequested\n          numPartitions\n          timestamp\n          partitionSetName\n          partitionSet {\n            id\n            name\n            mode\n            pipelineName\n            repositoryOrigin {\n              id\n              repositoryName\n              repositoryLocationName\n            }\n          }\n          error {\n            ...PythonErrorFragment\n          }\n\n          ...BackfillTableFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${BACKFILL_TABLE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Colors,\n  PageHeader,\n  Spinner,\n  Code,\n  Heading,\n  StyledReadOnlyCodeMirror,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as codemirror from 'codemirror';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components/macro';\n\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery} from './types/InstanceConfigQuery';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    box-shadow: 0 1px 0 ${Colors.KeylineGray};\n    height: 100%;\n  }\n\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    .config-highlight {\n      background-color: ${Colors.Yellow200};\n    }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  useTrackPageView();\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryResult = useQuery<InstanceConfigQuery>(INSTANCE_CONFIG_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const onEditorDidMount = (editor: codemirror.Editor) => {\n    const documentHash = document.location.hash;\n    if (documentHash) {\n      const target = new RegExp(`^${documentHash.slice(1)}:`);\n      const cursor = editor.getSearchCursor(target);\n      const found = cursor.findNext();\n      if (found) {\n        editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n        editor.scrollIntoView(cursor.from());\n      }\n    }\n  };\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"config\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n      </Box>\n      <StyledReadOnlyCodeMirror\n        editorDidMount={onEditorDidMount}\n        value={config || ''}\n        options={{lineNumbers: true, mode: 'yaml'}}\n        theme={['instance-config']}\n      />\n    </>\n  );\n});\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      info\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery} from './types/InstanceHealthQuery';\n\nexport const InstanceHealthPage = () => {\n  useTrackPageView();\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceHealthQuery>(INSTANCE_HEALTH_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.Gray400}}>\n          Loading…\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"health\" refreshState={refreshState} />}\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Subheading>Daemon statuses</Subheading>\n      </Box>\n      {daemonContent()}\n    </>\n  );\n};\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Colors,\n  Icon,\n  PageHeader,\n  Spinner,\n  Heading,\n  TextInput,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useMergedRefresh, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {HourWindow, makeJobKey, QueryfulRunTimeline} from '../runs/QueryfulRunTimeline';\nimport {\n  failedStatuses,\n  inProgressStatuses,\n  queuedStatuses,\n  successStatuses,\n} from '../runs/RunStatuses';\nimport {TimelineJob} from '../runs/RunTimeline';\nimport {RUN_TIME_FRAGMENT} from '../runs/RunUtils';\nimport {RunTimeFragment} from '../runs/types/RunTimeFragment';\nimport {SCHEDULE_SWITCH_FRAGMENT} from '../schedules/ScheduleSwitch';\nimport {SENSOR_SWITCH_FRAGMENT} from '../sensors/SensorSwitch';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {JobItem, JobItemWithRuns, JobTable} from './JobTable';\nimport {SCHEDULE_FUTURE_TICKS_FRAGMENT} from './NextTick';\nimport {RepoFilterButton} from './RepoFilterButton';\nimport {\n  InstanceOverviewInitialQuery,\n  InstanceOverviewInitialQuery_workspaceOrError_Workspace_locationEntries_locationOrLoadError_RepositoryLocation_repositories_schedules as Schedule,\n  InstanceOverviewInitialQuery_workspaceOrError_Workspace_locationEntries_locationOrLoadError_RepositoryLocation_repositories_sensors as Sensor,\n} from './types/InstanceOverviewInitialQuery';\nimport {LastTenRunsPerJobQuery} from './types/LastTenRunsPerJobQuery';\n\ntype State = {\n  searchValue: string;\n};\n\ntype Action = {type: 'search'; value: string};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'search': {\n      return {...state, searchValue: action.value};\n    }\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  searchValue: '',\n};\n\nexport const InstanceOverviewPage = () => {\n  useTrackPageView();\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const {searchValue} = state;\n\n  const queryResultOverview = useQuery<InstanceOverviewInitialQuery>(\n    INSTANCE_OVERVIEW_INITIAL_QUERY,\n    {\n      fetchPolicy: 'network-only',\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const {data, loading} = queryResultOverview;\n\n  const queryResultLastRuns = useQuery<LastTenRunsPerJobQuery>(LAST_TEN_RUNS_PER_JOB_QUERY, {\n    fetchPolicy: 'network-only',\n    notifyOnNetworkStatusChange: true,\n  });\n  const {data: lastTenRunsData} = queryResultLastRuns;\n\n  const refreshState = useMergedRefresh(\n    useQueryRefreshAtInterval(queryResultLastRuns, FIFTEEN_SECONDS),\n    useQueryRefreshAtInterval(queryResultOverview, FIFTEEN_SECONDS),\n  );\n\n  const bucketed = React.useMemo(() => {\n    const failed = [];\n    const inProgress = [];\n    const succeeded = [];\n    const queued = [];\n    const neverRan = [];\n\n    const sortFn = (a: JobItemWithRuns, b: JobItemWithRuns) => {\n      const aRun = a.runs[0] || null;\n      const bRun = b.runs[0] || null;\n\n      if (aRun.startTime) {\n        return bRun.startTime ? bRun.startTime - aRun.startTime : -1;\n      } else if (bRun.startTime) {\n        return -1;\n      }\n\n      return a.name.toLocaleLowerCase().localeCompare(b.name.toLocaleLowerCase());\n    };\n\n    if (data && Object.keys(data).length && data?.workspaceOrError.__typename === 'Workspace') {\n      for (const locationEntry of data.workspaceOrError.locationEntries) {\n        if (\n          locationEntry.__typename === 'WorkspaceLocationEntry' &&\n          locationEntry.locationOrLoadError?.__typename === 'RepositoryLocation'\n        ) {\n          for (const repository of locationEntry.locationOrLoadError.repositories) {\n            for (const pipeline of repository.pipelines) {\n              const {runs} = pipeline;\n              const schedules: Schedule[] = (repository.schedules || []).filter(\n                (schedule) => schedule.pipelineName === pipeline.name,\n              );\n              const sensors: Sensor[] = (repository.sensors || []).filter((sensor) =>\n                sensor.targets?.map((t) => t.pipelineName).includes(pipeline.name),\n              );\n              const repoAddress = buildRepoAddress(\n                repository.name,\n                locationEntry.locationOrLoadError.name,\n              );\n\n              if (runs.length) {\n                const {status} = runs[0];\n                const item: JobItemWithRuns = {\n                  isJob: pipeline.isJob,\n                  name: pipeline.name,\n                  schedules,\n                  sensors,\n                  repoAddress,\n                  runs,\n                };\n                if (failedStatuses.has(status)) {\n                  failed.push(item);\n                } else if (inProgressStatuses.has(status)) {\n                  inProgress.push(item);\n                } else if (successStatuses.has(status)) {\n                  succeeded.push(item);\n                } else if (queuedStatuses.has(status)) {\n                  queued.push(item);\n                } else {\n                  neverRan.push(item);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    failed.sort(sortFn);\n    inProgress.sort(sortFn);\n    queued.sort(sortFn);\n    succeeded.sort(sortFn);\n    neverRan.sort(sortFn);\n\n    return {failed, inProgress, queued, succeeded, neverRan};\n  }, [data]);\n\n  const filteredJobs = React.useMemo(() => {\n    const searchToLower = searchValue.toLocaleLowerCase();\n    const filterJobs = ({name, repoAddress}: JobItem) =>\n      visibleRepos.some(\n        (r) =>\n          r.repository.name === repoAddress.name &&\n          r.repositoryLocation.name === repoAddress.location,\n      ) &&\n      name.toLocaleLowerCase().includes(searchToLower) &&\n      !isHiddenAssetGroupJob(name);\n\n    const {failed, inProgress, queued, succeeded, neverRan} = bucketed;\n    return {\n      failed: failed.filter(filterJobs),\n      inProgress: inProgress.filter(filterJobs),\n      queued: queued.filter(filterJobs),\n      succeeded: succeeded.filter(filterJobs),\n      neverRan: neverRan.filter(filterJobs),\n    };\n  }, [bucketed, visibleRepos, searchValue]);\n\n  const lastTenRunsFlattened = React.useMemo(() => {\n    if (!lastTenRunsData || Object.keys(lastTenRunsData).length === 0) {\n      return null;\n    }\n\n    const flattened: {[key: string]: RunTimeFragment[]} = {};\n    if (lastTenRunsData.workspaceOrError.__typename === 'Workspace') {\n      for (const locationEntry of lastTenRunsData.workspaceOrError.locationEntries) {\n        if (\n          locationEntry.__typename === 'WorkspaceLocationEntry' &&\n          locationEntry.locationOrLoadError?.__typename === 'RepositoryLocation'\n        ) {\n          for (const repository of locationEntry.locationOrLoadError.repositories) {\n            for (const pipeline of repository.pipelines) {\n              const jobKey = makeJobKey(\n                buildRepoAddress(repository.name, locationEntry.locationOrLoadError.name),\n                pipeline.name,\n              );\n              flattened[jobKey] = pipeline.runs;\n            }\n          }\n        }\n      }\n    }\n\n    return flattened;\n  }, [lastTenRunsData]);\n\n  const filteredJobsFlattened: JobItem[] = React.useMemo(() => {\n    return Object.values(filteredJobs).reduce((accum, jobList) => {\n      return [...accum, ...jobList];\n    }, []);\n  }, [filteredJobs]);\n\n  const filteredJobsWithRuns = React.useMemo(() => {\n    const appendRuns = (jobItem: JobItem) => {\n      const {name, repoAddress} = jobItem;\n      const jobKey = makeJobKey(repoAddress, name);\n      const matchingRuns = lastTenRunsFlattened ? lastTenRunsFlattened[jobKey] || [] : [];\n      return {...jobItem, runs: [...matchingRuns].reverse()};\n    };\n\n    const {failed, inProgress, queued, succeeded, neverRan} = filteredJobs;\n    return {\n      failed: failed.map(appendRuns),\n      inProgress: inProgress.map(appendRuns),\n      queued: queued.map(appendRuns),\n      succeeded: succeeded.map(appendRuns),\n      neverRan: neverRan.map(appendRuns),\n    };\n  }, [lastTenRunsFlattened, filteredJobs]);\n\n  if (!data || Object.keys(data).length === 0) {\n    return (\n      <>\n        <PageHeader\n          title={<Heading>{pageTitle}</Heading>}\n          tabs={<InstanceTabs tab=\"overview\" refreshState={refreshState} />}\n        />\n        <Box padding={64}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </>\n    );\n  }\n\n  const {failed, inProgress, queued, succeeded, neverRan} = filteredJobsWithRuns;\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"overview\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{horizontal: 24, top: 16}}\n        flex={{direction: 'row', alignItems: 'center', gap: 12, grow: 0}}\n      >\n        {allRepos.length > 1 && <RepoFilterButton />}\n        <TextInput\n          icon=\"search\"\n          value={searchValue}\n          onChange={(e) => dispatch({type: 'search', value: e.target.value})}\n          placeholder=\"Filter by job name…\"\n          style={{width: '340px'}}\n        />\n      </Box>\n      <RunTimelineSection jobs={filteredJobsFlattened} loading={loading} />\n      {inProgress.length ? (\n        <JobSection\n          icon={<Icon name=\"hourglass_bottom\" color={Colors.Blue500} size={24} />}\n          heading={\n            inProgress.length === 1 ? '1 job in progress' : `${inProgress.length} jobs in progress`\n          }\n          jobs={inProgress}\n        />\n      ) : null}\n      {failed.length ? (\n        <JobSection\n          icon={<Icon name=\"error_outline\" color={Colors.Red500} size={24} />}\n          heading={failed.length === 1 ? '1 job failed' : `${failed.length} jobs failed`}\n          jobs={failed}\n        />\n      ) : null}\n      {queued.length ? (\n        <JobSection\n          icon={<Icon name=\"checklist\" color={Colors.Gray500} size={24} />}\n          heading={queued.length === 1 ? '1 job queued' : `${queued.length} jobs queued`}\n          jobs={queued}\n        />\n      ) : null}\n      {succeeded.length ? (\n        <JobSection\n          icon={<Icon name=\"check_circle\" color={Colors.Green500} size={24} />}\n          heading={\n            succeeded.length === 1 ? '1 job succeeded' : `${succeeded.length} jobs succeeded`\n          }\n          jobs={succeeded}\n        />\n      ) : null}\n      {neverRan.length ? (\n        <JobSection\n          icon={<Icon name=\"history_toggle_off\" color={Colors.Gray900} size={24} />}\n          heading={neverRan.length === 1 ? '1 job never ran' : `${neverRan.length} jobs never ran`}\n          jobs={neverRan}\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst LOOKAHEAD_HOURS = 1;\nconst ONE_HOUR = 60 * 60 * 1000;\n\nconst HOUR_WINDOW_KEY = 'dagit.run-timeline-hour-window';\n\nconst validateHourWindow = (value: string): HourWindow => {\n  switch (value) {\n    case '1':\n    case '6':\n    case '12':\n    case '24':\n      return value;\n    default:\n      return '12';\n  }\n};\n\nconst RunTimelineSection = ({jobs, loading}: {jobs: JobItem[]; loading: boolean}) => {\n  const [shown, setShown] = React.useState(true);\n  const [hourWindow, setHourWindow] = useStateWithStorage(HOUR_WINDOW_KEY, validateHourWindow);\n  const nowRef = React.useRef(Date.now());\n\n  React.useEffect(() => {\n    if (!loading) {\n      nowRef.current = Date.now();\n    }\n  }, [loading]);\n\n  const nowSecs = Math.floor(nowRef.current / 1000);\n  const range: [number, number] = React.useMemo(() => {\n    return [\n      nowSecs * 1000 - Number(hourWindow) * ONE_HOUR,\n      nowSecs * 1000 + LOOKAHEAD_HOURS * ONE_HOUR,\n    ];\n  }, [hourWindow, nowSecs]);\n\n  const [start, end] = React.useMemo(() => {\n    const [unvalidatedStart, unvalidatedEnd] = range;\n    return unvalidatedEnd < unvalidatedStart\n      ? [unvalidatedEnd, unvalidatedStart]\n      : [unvalidatedStart, unvalidatedEnd];\n  }, [range]);\n\n  const timelineJobs: TimelineJob[] = jobs.map((job) => ({\n    key: makeJobKey(job.repoAddress, job.name),\n    jobName: job.name,\n    repoAddress: job.repoAddress,\n    path: workspacePipelinePath({\n      repoName: job.repoAddress.name,\n      repoLocation: job.repoAddress.location,\n      pipelineName: job.name,\n      isJob: job.isJob,\n    }),\n    runs: [],\n  }));\n\n  return (\n    <>\n      <Box\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n        margin={{top: 16}}\n        padding={{bottom: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          <Icon name=\"waterfall_chart\" color={Colors.Gray900} size={20} />\n          <Heading>Timeline</Heading>\n        </Box>\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {shown ? (\n            <ButtonGroup<HourWindow>\n              activeItems={new Set([hourWindow])}\n              buttons={[\n                {id: '1', label: '1hr'},\n                {id: '6', label: '6hr'},\n                {id: '12', label: '12hr'},\n                {id: '24', label: '24hr'},\n              ]}\n              onClick={(hrWindow: HourWindow) => setHourWindow(hrWindow)}\n            />\n          ) : null}\n          <Button\n            icon={<Icon name={shown ? 'unfold_less' : 'unfold_more'} />}\n            onClick={() => setShown((current) => !current)}\n          >\n            {shown ? 'Hide' : 'Show'}\n          </Button>\n        </Box>\n      </Box>\n      {shown ? (\n        <QueryfulRunTimeline range={[start, end]} jobs={timelineJobs} hourWindow={hourWindow} />\n      ) : null}\n    </>\n  );\n};\n\ninterface JobSectionProps {\n  icon: React.ReactNode;\n  heading: React.ReactNode;\n  jobs: JobItemWithRuns[];\n}\n\nconst JobSection = (props: JobSectionProps) => {\n  const {icon, heading, jobs} = props;\n  return (\n    <>\n      <Box\n        flex={{direction: 'row', gap: 8, alignItems: 'center'}}\n        margin={{top: 16}}\n        padding={{vertical: 16, horizontal: 24}}\n      >\n        {icon}\n        <Heading>{heading}</Heading>\n      </Box>\n      <JobTable jobs={jobs} />\n    </>\n  );\n};\n\nconst OVERVIEW_JOB_FRAGMENT = gql`\n  fragment OverviewJobFragment on Pipeline {\n    id\n    name\n    isJob\n    runs(limit: 1) {\n      id\n      mode\n      runId\n      status\n      ...RunTimeFragment\n    }\n    modes {\n      id\n      name\n    }\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n\nexport const INSTANCE_OVERVIEW_INITIAL_QUERY = gql`\n  query InstanceOverviewInitialQuery {\n    workspaceOrError {\n      ... on Workspace {\n        locationEntries {\n          id\n          name\n          loadStatus\n          displayMetadata {\n            key\n            value\n          }\n          locationOrLoadError {\n            ... on RepositoryLocation {\n              id\n              name\n              repositories {\n                id\n                name\n                pipelines {\n                  id\n                  ...OverviewJobFragment\n                }\n                ...RepositoryInfoFragment\n                schedules {\n                  id\n                  name\n                  pipelineName\n                  scheduleState {\n                    id\n                    status\n                  }\n                  ...ScheduleFutureTicksFragment\n                  ...ScheduleSwitchFragment\n                }\n                sensors {\n                  id\n                  name\n                  targets {\n                    pipelineName\n                  }\n                  sensorState {\n                    id\n                    status\n                  }\n                  ...SensorSwitchFragment\n                }\n              }\n            }\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${OVERVIEW_JOB_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FUTURE_TICKS_FRAGMENT}\n  ${SCHEDULE_SWITCH_FRAGMENT}\n  ${SENSOR_SWITCH_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const LAST_TEN_RUNS_PER_JOB_QUERY = gql`\n  query LastTenRunsPerJobQuery {\n    workspaceOrError {\n      ... on Workspace {\n        locationEntries {\n          id\n          locationOrLoadError {\n            ... on RepositoryLocation {\n              id\n              name\n              repositories {\n                id\n                name\n                pipelines {\n                  id\n                  name\n                  isJob\n                  runs(limit: 10) {\n                    id\n                    ...RunTimeFragment\n                  }\n                }\n              }\n            }\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Group, NonIdealState, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {UnloadableSchedules} from '../instigation/Unloadable';\nimport {SCHEDULE_FRAGMENT} from '../schedules/ScheduleUtils';\nimport {SchedulerInfo} from '../schedules/SchedulerInfo';\nimport {SchedulesTable} from '../schedules/SchedulesTable';\nimport {InstigationType} from '../types/globalTypes';\nimport {Loading} from '../ui/Loading';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {buildRepoPath, buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceSchedulesQuery} from './types/InstanceSchedulesQuery';\n\nexport const InstanceSchedules = React.memo(() => {\n  useTrackPageView();\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceSchedulesQuery>(INSTANCE_SCHEDULES_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"schedules\" refreshState={refreshState} />}\n      />\n      <Loading queryResult={queryData} allowStaleData={true}>\n        {(data) => <AllSchedules data={data} />}\n      </Loading>\n    </>\n  );\n});\n\nconst AllSchedules: React.FC<{data: InstanceSchedulesQuery}> = ({data}) => {\n  const {instance, repositoriesOrError, unloadableInstigationStatesOrError} = data;\n\n  if (repositoriesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={repositoriesOrError} />;\n  }\n  if (unloadableInstigationStatesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={unloadableInstigationStatesOrError} />;\n  }\n\n  const unloadable = unloadableInstigationStatesOrError.results;\n  const withSchedules = repositoriesOrError.nodes.filter(\n    (repository) => repository.schedules.length,\n  );\n\n  const loadedSchedulesSection = withSchedules.length ? (\n    <>\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SchedulerInfo daemonHealth={instance.daemonHealth} />\n      </Box>\n      {withSchedules.map((repository) => (\n        <React.Fragment key={repository.name}>\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          >\n            <Subheading>{`${buildRepoPath(repository.name, repository.location.name)}`}</Subheading>\n          </Box>\n          <Box padding={{bottom: 16}}>\n            <SchedulesTable\n              repoAddress={buildRepoAddress(repository.name, repository.location.name)}\n              schedules={repository.schedules}\n            />\n          </Box>\n        </React.Fragment>\n      ))}\n    </>\n  ) : null;\n\n  const unloadableSchedules = unloadable.filter(\n    (state) => state.instigationType === InstigationType.SCHEDULE,\n  );\n\n  const unloadableSchedulesSection = unloadableSchedules.length ? (\n    <UnloadableSchedules scheduleStates={unloadableSchedules} />\n  ) : null;\n\n  if (!loadedSchedulesSection && !unloadableSchedulesSection) {\n    return (\n      <Box margin={{top: 32}}>\n        <NonIdealState\n          icon=\"schedule\"\n          title=\"No schedules found\"\n          description={\n            <div>\n              This instance does not have any schedules defined. Visit the{' '}\n              <a\n                href=\"https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                scheduler documentation\n              </a>{' '}\n              for more information about scheduling runs in Dagster.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Group direction=\"column\" spacing={32}>\n      {loadedSchedulesSection}\n      {unloadableSchedulesSection}\n    </Group>\n  );\n};\n\nconst INSTANCE_SCHEDULES_QUERY = gql`\n  query InstanceSchedulesQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          ...RepositoryInfoFragment\n          schedules {\n            id\n            ...ScheduleFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n    unloadableInstigationStatesOrError {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, NonIdealState, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {UnloadableSensors} from '../instigation/Unloadable';\nimport {SENSOR_FRAGMENT} from '../sensors/SensorFragment';\nimport {SensorInfo} from '../sensors/SensorInfo';\nimport {SensorsTable} from '../sensors/SensorsTable';\nimport {Loading} from '../ui/Loading';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {buildRepoPath, buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceSensorsQuery} from './types/InstanceSensorsQuery';\n\nexport const InstanceSensors = React.memo(() => {\n  useTrackPageView();\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceSensorsQuery>(INSTANCE_SENSORS_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"sensors\" refreshState={refreshState} />}\n      />\n      <Loading queryResult={queryData} allowStaleData={true}>\n        {(data) => <AllSensors data={data} />}\n      </Loading>\n    </>\n  );\n});\n\nconst AllSensors: React.FC<{data: InstanceSensorsQuery}> = ({data}) => {\n  const {instance, repositoriesOrError, unloadableInstigationStatesOrError} = data;\n\n  if (repositoriesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={repositoriesOrError} />;\n  }\n  if (unloadableInstigationStatesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={unloadableInstigationStatesOrError} />;\n  }\n\n  const unloadable = unloadableInstigationStatesOrError.results;\n  const withSensors = repositoriesOrError.nodes.filter((repository) => repository.sensors.length);\n\n  const sensorDefinitionsSection = withSensors.length ? (\n    <>\n      <Box padding={{horizontal: 24, vertical: 16}}>\n        <SensorInfo daemonHealth={instance.daemonHealth} />\n      </Box>\n      {withSensors.map((repository) =>\n        repository.sensors.length ? (\n          <React.Fragment key={repository.name}>\n            <Box\n              padding={{horizontal: 24, vertical: 16}}\n              border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n            >\n              <Subheading>{`${buildRepoPath(\n                repository.name,\n                repository.location.name,\n              )}`}</Subheading>\n            </Box>\n            <Box padding={{bottom: 16}}>\n              <SensorsTable\n                repoAddress={buildRepoAddress(repository.name, repository.location.name)}\n                sensors={repository.sensors}\n              />\n            </Box>\n          </React.Fragment>\n        ) : null,\n      )}\n    </>\n  ) : null;\n\n  const unloadableSensorsSection = unloadable.length ? (\n    <UnloadableSensors sensorStates={unloadable} />\n  ) : null;\n\n  if (!sensorDefinitionsSection && !unloadableSensorsSection) {\n    return (\n      <Box padding={{vertical: 64}} border={{side: 'top', width: 1, color: Colors.KeylineGray}}>\n        <NonIdealState\n          icon=\"sensors\"\n          title=\"No sensors found\"\n          description={\n            <p>\n              This instance does not have any sensors defined. Visit the{' '}\n              <a\n                href=\"https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                sensor documentation\n              </a>{' '}\n              for more information about setting up sensors in Dagster.\n            </p>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      {sensorDefinitionsSection}\n      {unloadableSensorsSection}\n    </>\n  );\n};\n\nconst INSTANCE_SENSORS_QUERY = gql`\n  query InstanceSensorsQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          ...RepositoryInfoFragment\n          sensors {\n            id\n            ...SensorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n    unloadableInstigationStatesOrError(instigationType: SENSOR) {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${SENSOR_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {Page} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport {InstanceBackfills} from './InstanceBackfills';\nimport {InstanceConfig} from './InstanceConfig';\nimport {InstanceHealthPage} from './InstanceHealthPage';\nimport {InstanceOverviewPage} from './InstanceOverviewPage';\nimport {InstanceSchedules} from './InstanceSchedules';\nimport {InstanceSensors} from './InstanceSensors';\n\nconst CodeLocationsPage = React.lazy(() => import('./CodeLocationsPage'));\n\nexport const InstanceStatusRoot = () => (\n  <Page>\n    <Switch>\n      <Route path=\"/instance/overview\">\n        <InstanceOverviewPage />\n      </Route>\n      <Route path=\"/instance/health\">\n        <InstanceHealthPage />\n      </Route>\n      <Route path=\"/instance/schedules\">\n        <InstanceSchedules />\n      </Route>\n      <Route path=\"/instance/sensors\">\n        <InstanceSensors />\n      </Route>\n      <Route path=\"/instance/backfills\">\n        <InstanceBackfills />\n      </Route>\n      <Route path=\"/instance/config\">\n        <InstanceConfig />\n      </Route>\n      <Route path=\"/instance/code-locations\">\n        <React.Suspense fallback={<div />}>\n          <CodeLocationsPage />\n        </React.Suspense>\n      </Route>\n      <Route path=\"*\" render={() => <Redirect to=\"/instance\" />} />\n    </Switch>\n  </Page>\n);\n","import {MainContent} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, Route, Switch, useLocation} from 'react-router-dom';\n\nimport {AssetsCatalogRoot} from '../assets/AssetsCatalogRoot';\nimport {AssetsGroupsGlobalGraphRoot} from '../assets/AssetsGroupsGlobalGraphRoot';\nimport {RunRoot} from '../runs/RunRoot';\nimport {RunsRoot} from '../runs/RunsRoot';\nimport {ScheduledRunListRoot} from '../runs/ScheduledRunListRoot';\nimport {SnapshotRoot} from '../snapshots/SnapshotRoot';\n\nimport {InstanceStatusRoot} from './InstanceStatusRoot';\n\nexport const InstanceRoot = () => {\n  const {pathname} = useLocation();\n  const main = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    main.current?.scrollTo({top: 0});\n  }, [pathname]);\n\n  return (\n    <MainContent ref={main}>\n      <Switch>\n        <Route path=\"/instance/asset-groups(/?.*)\">\n          <AssetsGroupsGlobalGraphRoot />\n        </Route>\n        <Route path=\"/instance/assets(/?.*)\">\n          <AssetsCatalogRoot />\n        </Route>\n        <Route path=\"/instance/runs\" exact>\n          <RunsRoot />\n        </Route>\n        <Route path=\"/instance/runs/scheduled\" exact>\n          <ScheduledRunListRoot />\n        </Route>\n        <Route path=\"/instance/runs/:runId\" exact>\n          <RunRoot />\n        </Route>\n        <Route path=\"/instance/snapshots/:pipelinePath/:tab?\">\n          <SnapshotRoot />\n        </Route>\n        <Route path=\"/instance/:tab\">\n          <InstanceStatusRoot />\n        </Route>\n        <Route path=\"*\" render={() => <Redirect to=\"/instance/overview\" />} />\n      </Switch>\n    </MainContent>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceRoot;\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\n// todo dish: Delete this once Cloud is switched to use `InstancePageContext`.\nexport const InstanceTabContext = React.createContext({healthTitle: 'Daemons'});\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const {flagNewWorkspace} = useFeatureFlags();\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink id=\"overview\" title=\"Overview\" to=\"/instance/overview\" />\n        {flagNewWorkspace ? (\n          <TabLink id=\"code-locations\" title=\"Code locations\" to=\"/instance/code-locations\" />\n        ) : null}\n        <TabLink id=\"health\" title={healthTitle} to=\"/instance/health\" />\n        <TabLink id=\"schedules\" title=\"Schedules\" to=\"/instance/schedules\" />\n        <TabLink id=\"sensors\" title=\"Sensors\" to=\"/instance/sensors\" />\n        <TabLink id=\"backfills\" title=\"Backfills\" to=\"/instance/backfills\" />\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/instance/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {InstanceConfigHasInfo} from './types/InstanceConfigHasInfo';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfo>(INSTANCE_CONFIG_HAS_INFO);\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      hasInfo\n    }\n  }\n`;\n","\"use strict\";\n\n// This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANSI_COLORS = [[{ color: \"0, 0, 0\", \"class\": \"ansi-black\" }, { color: \"187, 0, 0\", \"class\": \"ansi-red\" }, { color: \"0, 187, 0\", \"class\": \"ansi-green\" }, { color: \"187, 187, 0\", \"class\": \"ansi-yellow\" }, { color: \"0, 0, 187\", \"class\": \"ansi-blue\" }, { color: \"187, 0, 187\", \"class\": \"ansi-magenta\" }, { color: \"0, 187, 187\", \"class\": \"ansi-cyan\" }, { color: \"255,255,255\", \"class\": \"ansi-white\" }], [{ color: \"85, 85, 85\", \"class\": \"ansi-bright-black\" }, { color: \"255, 85, 85\", \"class\": \"ansi-bright-red\" }, { color: \"0, 255, 0\", \"class\": \"ansi-bright-green\" }, { color: \"255, 255, 85\", \"class\": \"ansi-bright-yellow\" }, { color: \"85, 85, 255\", \"class\": \"ansi-bright-blue\" }, { color: \"255, 85, 255\", \"class\": \"ansi-bright-magenta\" }, { color: \"85, 255, 255\", \"class\": \"ansi-bright-cyan\" }, { color: \"255, 255, 255\", \"class\": \"ansi-bright-white\" }]];\n\nvar Anser = function () {\n    _createClass(Anser, null, [{\n        key: \"escapeForHtml\",\n\n\n        /**\n         * Anser.escapeForHtml\n         * Escape the input HTML.\n         *\n         * This does the minimum escaping of text to make it compliant with HTML.\n         * In particular, the '&','<', and '>' characters are escaped. This should\n         * be run prior to `ansiToHtml`.\n         *\n         * @name Anser.escapeForHtml\n         * @function\n         * @param {String} txt The input text (containing the ANSI snippets).\n         * @returns {String} The escaped html.\n         */\n        value: function escapeForHtml(txt) {\n            return new Anser().escapeForHtml(txt);\n        }\n\n        /**\n         * Anser.linkify\n         * Adds the links in the HTML.\n         *\n         * This replaces any links in the text with anchor tags that display the\n         * link. The links should have at least one whitespace character\n         * surrounding it. Also, you should apply this after you have run\n         * `ansiToHtml` on the text.\n         *\n         * @name Anser.linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML containing the <a> tags (unescaped).\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return new Anser().linkify(txt);\n        }\n\n        /**\n         * Anser.ansiToHtml\n         * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n         * content.\n         *\n         * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n         * that can be represented in HTML.\n         * For example, cursor movement codes are ignored and hidden from output.\n         * The default style uses colors that are very close to the prescribed\n         * standard. The standard assumes that the text will have a black\n         * background. These colors are set as inline styles on the SPAN tags.\n         *\n         * Another option is to set `use_classes: true` in the options argument.\n         * This will instead set classes on the spans so the colors can be set via\n         * CSS. The class names used are of the format `ansi-*-fg/bg` and\n         * `ansi-bright-*-fg/bg` where `*` is the color name,\n         * i.e black/red/green/yellow/blue/magenta/cyan/white.\n         *\n         * @name Anser.ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return new Anser().ansiToHtml(txt, options);\n        }\n\n        /**\n         * Anser.ansiToJson\n         * Converts ANSI input into JSON output.\n         *\n         * @name Anser.ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            return new Anser().ansiToJson(txt, options);\n        }\n\n        /**\n         * Anser.ansiToText\n         * Converts ANSI input into text output.\n         *\n         * @name Anser.ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return new Anser().ansiToText(txt);\n        }\n\n        /**\n         * Anser\n         * The `Anser` class.\n         *\n         * @name Anser\n         * @function\n         * @returns {Anser}\n         */\n\n    }]);\n\n    function Anser() {\n        _classCallCheck(this, Anser);\n\n        this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n        this.bright = 0;\n    }\n\n    /**\n     * setupPalette\n     * Sets up the palette.\n     *\n     * @name setupPalette\n     * @function\n     */\n\n\n    _createClass(Anser, [{\n        key: \"setupPalette\",\n        value: function setupPalette() {\n            this.PALETTE_COLORS = [];\n\n            // Index 0..15 : System color\n            for (var i = 0; i < 2; ++i) {\n                for (var j = 0; j < 8; ++j) {\n                    this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n                }\n            }\n\n            // Index 16..231 : RGB 6x6x6\n            // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n            var levels = [0, 95, 135, 175, 215, 255];\n            var format = function format(r, g, b) {\n                return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n            };\n            var r = void 0,\n                g = void 0,\n                b = void 0;\n            for (var _r = 0; _r < 6; ++_r) {\n                for (var _g = 0; _g < 6; ++_g) {\n                    for (var _b = 0; _b < 6; ++_b) {\n                        this.PALETTE_COLORS.push(format(_r, _g, _b));\n                    }\n                }\n            }\n\n            // Index 232..255 : Grayscale\n            var level = 8;\n            for (var _i = 0; _i < 24; ++_i, level += 10) {\n                this.PALETTE_COLORS.push(format(level, level, level));\n            }\n        }\n\n        /**\n         * escapeForHtml\n         * Escapes the input text.\n         *\n         * @name escapeForHtml\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The escpaed HTML output.\n         */\n\n    }, {\n        key: \"escapeForHtml\",\n        value: function escapeForHtml(txt) {\n            return txt.replace(/[&<>]/gm, function (str) {\n                return str == \"&\" ? \"&amp;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n            });\n        }\n\n        /**\n         * linkify\n         * Adds HTML link elements.\n         *\n         * @name linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML output containing link elements.\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n                return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n            });\n        }\n\n        /**\n         * ansiToHtml\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToJson\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The JSON output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            options = options || {};\n            options.json = true;\n            options.clearLine = false;\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToText\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return this.process(txt, {}, false);\n        }\n\n        /**\n         * process\n         * Processes the input.\n         *\n         * @name process\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options An object passed to `processChunk` method, extended with:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup\n         */\n\n    }, {\n        key: \"process\",\n        value: function process(txt, options, markup) {\n            var _this = this;\n\n            var self = this;\n            var raw_text_chunks = txt.split(/\\033\\[/);\n            var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n            if (options === undefined || options === null) {\n                options = {};\n            }\n            options.clearLine = /\\r/.test(txt); // check for Carriage Return\n            var color_chunks = raw_text_chunks.map(function (chunk) {\n                return _this.processChunk(chunk, options, markup);\n            });\n\n            if (options && options.json) {\n                var first = self.processChunkJson(\"\");\n                first.content = first_chunk;\n                first.clearLine = options.clearLine;\n                color_chunks.unshift(first);\n                if (options.remove_empty) {\n                    color_chunks = color_chunks.filter(function (c) {\n                        return !c.isEmpty();\n                    });\n                }\n                return color_chunks;\n            } else {\n                color_chunks.unshift(first_chunk);\n            }\n\n            return color_chunks.join(\"\");\n        }\n\n        /**\n         * processChunkJson\n         * Processes the current chunk into json output.\n         *\n         * @name processChunkJson\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object} The result object:\n         *\n         *  - `content` (String): The text.\n         *  - `fg` (String|null): The foreground color.\n         *  - `bg` (String|null): The background color.\n         *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n         *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n         *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n         *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n         *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n         *\n         */\n\n    }, {\n        key: \"processChunkJson\",\n        value: function processChunkJson(text, options, markup) {\n\n            // Are we using classes or styles?\n            options = typeof options == \"undefined\" ? {} : options;\n            var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n            var key = options.key = use_classes ? \"class\" : \"color\";\n\n            var result = {\n                content: text,\n                fg: null,\n                bg: null,\n                fg_truecolor: null,\n                bg_truecolor: null,\n                clearLine: options.clearLine,\n                decoration: null,\n                was_processed: false,\n                isEmpty: function isEmpty() {\n                    return !result.content;\n                }\n            };\n\n            // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n            //\n            // This regex matches four groups within a chunk.\n            //\n            // The first and third groups match code type.\n            // We supported only SGR command. It has empty first group and \"m\" in third.\n            //\n            // The second group matches all of the number+semicolon command sequences\n            // before the \"m\" (or other trailing) character.\n            // These are the graphics or SGR commands.\n            //\n            // The last group is the text (including newlines) that is colored by\n            // the other group\"s commands.\n            var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n\n            if (!matches) return result;\n\n            var orig_txt = result.content = matches[4];\n            var nums = matches[2].split(\";\");\n\n            // We currently support only \"SGR\" (Select Graphic Rendition)\n            // Simply ignore if not a SGR command.\n            if (matches[1] !== \"\" || matches[3] !== \"m\") {\n                return result;\n            }\n\n            if (!markup) {\n                return result;\n            }\n\n            var self = this;\n\n            self.decoration = null;\n\n            while (nums.length > 0) {\n                var num_str = nums.shift();\n                var num = parseInt(num_str);\n\n                if (isNaN(num) || num === 0) {\n                    self.fg = self.bg = self.decoration = null;\n                } else if (num === 1) {\n                    self.decoration = \"bold\";\n                } else if (num === 2) {\n                    self.decoration = \"dim\";\n                    // Enable code 2 to get string\n                } else if (num == 3) {\n                    self.decoration = \"italic\";\n                } else if (num == 4) {\n                    self.decoration = \"underline\";\n                } else if (num == 5) {\n                    self.decoration = \"blink\";\n                } else if (num === 7) {\n                    self.decoration = \"reverse\";\n                } else if (num === 8) {\n                    self.decoration = \"hidden\";\n                    // Enable code 9 to get strikethrough\n                } else if (num === 9) {\n                    self.decoration = \"strikethrough\";\n                } else if (num == 39) {\n                    self.fg = null;\n                } else if (num == 49) {\n                    self.bg = null;\n                    // Foreground color\n                } else if (num >= 30 && num < 38) {\n                    self.fg = ANSI_COLORS[0][num % 10][key];\n                    // Foreground bright color\n                } else if (num >= 90 && num < 98) {\n                    self.fg = ANSI_COLORS[1][num % 10][key];\n                    // Background color\n                } else if (num >= 40 && num < 48) {\n                    self.bg = ANSI_COLORS[0][num % 10][key];\n                    // Background bright color\n                } else if (num >= 100 && num < 108) {\n                    self.bg = ANSI_COLORS[1][num % 10][key];\n                } else if (num === 38 || num === 48) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = num === 38;\n                    if (nums.length >= 1) {\n                        var mode = nums.shift();\n                        if (mode === \"5\" && nums.length >= 1) {\n                            // palette color\n                            var palette_index = parseInt(nums.shift());\n                            if (palette_index >= 0 && palette_index <= 255) {\n                                if (!use_classes) {\n                                    if (!this.PALETTE_COLORS) {\n                                        self.setupPalette();\n                                    }\n                                    if (is_foreground) {\n                                        self.fg = this.PALETTE_COLORS[palette_index];\n                                    } else {\n                                        self.bg = this.PALETTE_COLORS[palette_index];\n                                    }\n                                } else {\n                                    var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n                                    if (is_foreground) {\n                                        self.fg = klass;\n                                    } else {\n                                        self.bg = klass;\n                                    }\n                                }\n                            }\n                        } else if (mode === \"2\" && nums.length >= 3) {\n                            // true color\n                            var r = parseInt(nums.shift());\n                            var g = parseInt(nums.shift());\n                            var b = parseInt(nums.shift());\n                            if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                                var color = r + \", \" + g + \", \" + b;\n                                if (!use_classes) {\n                                    if (is_foreground) {\n                                        self.fg = color;\n                                    } else {\n                                        self.bg = color;\n                                    }\n                                } else {\n                                    if (is_foreground) {\n                                        self.fg = \"ansi-truecolor\";\n                                        self.fg_truecolor = color;\n                                    } else {\n                                        self.bg = \"ansi-truecolor\";\n                                        self.bg_truecolor = color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (self.fg === null && self.bg === null && self.decoration === null) {\n                return result;\n            } else {\n                var styles = [];\n                var classes = [];\n                var data = {};\n\n                result.fg = self.fg;\n                result.bg = self.bg;\n                result.fg_truecolor = self.fg_truecolor;\n                result.bg_truecolor = self.bg_truecolor;\n                result.decoration = self.decoration;\n                result.was_processed = true;\n\n                return result;\n            }\n        }\n\n        /**\n         * processChunk\n         * Processes the current chunk of text.\n         *\n         * @name processChunk\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n         */\n\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(text, options, markup) {\n            var _this2 = this;\n\n            var self = this;\n            options = options || {};\n            var jsonChunk = this.processChunkJson(text, options, markup);\n\n            if (options.json) {\n                return jsonChunk;\n            }\n            if (jsonChunk.isEmpty()) {\n                return \"\";\n            }\n            if (!jsonChunk.was_processed) {\n                return jsonChunk.content;\n            }\n\n            var use_classes = options.use_classes;\n\n            var styles = [];\n            var classes = [];\n            var data = {};\n            var render_data = function render_data(data) {\n                var fragments = [];\n                var key = void 0;\n                for (key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n                    }\n                }\n                return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n            };\n\n            if (jsonChunk.fg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.fg + \"-fg\");\n                    if (jsonChunk.fg_truecolor !== null) {\n                        data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n                        jsonChunk.fg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n                }\n            }\n\n            if (jsonChunk.bg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.bg + \"-bg\");\n                    if (jsonChunk.bg_truecolor !== null) {\n                        data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n                        jsonChunk.bg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n                }\n            }\n\n            if (jsonChunk.decoration) {\n                if (use_classes) {\n                    classes.push(\"ansi-\" + jsonChunk.decoration);\n                } else if (jsonChunk.decoration === \"bold\") {\n                    styles.push(\"font-weight:bold\");\n                } else if (jsonChunk.decoration === \"dim\") {\n                    styles.push(\"opacity:0.5\");\n                } else if (jsonChunk.decoration === \"italic\") {\n                    styles.push(\"font-style:italic\");\n                    // underline and blink are treated bellow\n                } else if (jsonChunk.decoration === \"reverse\") {\n                    styles.push(\"filter:invert(100%)\");\n                } else if (jsonChunk.decoration === \"hidden\") {\n                    styles.push(\"visibility:hidden\");\n                } else if (jsonChunk.decoration === \"strikethrough\") {\n                    styles.push(\"text-decoration:line-through\");\n                } else {\n                    styles.push(\"text-decoration:\" + jsonChunk.decoration);\n                }\n            }\n\n            if (use_classes) {\n                return \"<span class=\\\"\" + classes.join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            } else {\n                return \"<span style=\\\"\" + styles.join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            }\n        }\n    }]);\n\n    return Anser;\n}();\n\n;\n\nmodule.exports = Anser;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst anser_1 = __importDefault(require(\"anser\"));\nconst escape_carriage_1 = require(\"escape-carriage\");\nconst React = __importStar(require(\"react\"));\nconst LINK_REGEX = /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/;\n/**\n * Converts ANSI strings into JSON output.\n * @name ansiToJSON\n * @function\n * @param {String} input The input string.\n * @return {Array} The parsed input.\n */\nfunction ansiToJSON(input, use_classes = false) {\n    input = escape_carriage_1.escapeCarriageReturn(input);\n    return anser_1.default.ansiToJson(input, {\n        json: true,\n        remove_empty: true,\n        use_classes\n    });\n}\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry}.\n * @return {String} class name(s)\n */\nfunction createClass(bundle) {\n    let classNames = \"\";\n    if (!bundle.bg && !bundle.fg) {\n        return null;\n    }\n    if (bundle.bg) {\n        classNames += bundle.bg + \" \";\n    }\n    if (bundle.fg) {\n        classNames += bundle.fg + \" \";\n    }\n    classNames = classNames.substring(0, classNames.length - 1);\n    return classNames;\n}\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry}.\n * @return {Object} returns the style object\n */\nfunction createStyle(bundle) {\n    const style = {};\n    if (bundle.bg) {\n        style.backgroundColor = `rgb(${bundle.bg})`;\n    }\n    if (bundle.fg) {\n        style.color = `rgb(${bundle.fg})`;\n    }\n    return style;\n}\n/**\n * Converts an Anser bundle into a React Node.\n * @param linkify whether links should be converting into clickable anchor tags.\n * @param useClasses should render the span with a class instead of style.\n * @param bundle Anser output.\n */\nfunction convertBundleIntoReact(linkify, useClasses, bundle, key) {\n    const style = useClasses ? null : createStyle(bundle);\n    const className = useClasses ? createClass(bundle) : null;\n    if (!linkify) {\n        return React.createElement(\"span\", { style, key, className }, bundle.content);\n    }\n    const words = bundle.content.split(/(\\s+)/).reduce((words, word, index) => {\n        // If this is a separator, re-add the space removed from split.\n        if (index % 2 === 1) {\n            words.push(word);\n            return words;\n        }\n        // If  this isn't a link, just return the word as-is.\n        if (!LINK_REGEX.test(word)) {\n            words.push(word);\n            return words;\n        }\n        words.push(React.createElement(\"a\", {\n            key: index,\n            href: word,\n            target: \"_blank\"\n        }, `${word}`));\n        return words;\n    }, []);\n    return React.createElement(\"span\", { style, key, className }, words);\n}\nfunction Ansi(props) {\n    const { className, useClasses, children, linkify } = props;\n    return React.createElement(\"code\", { className }, ansiToJSON(children, !!useClasses).map(convertBundleIntoReact.bind(null, linkify, !!useClasses)));\n}\nexports.default = Ansi;\n","/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r[^$]/.test(txt)) {\n    var base = /^(.*)\\r+/m.exec(txt)[1];\n    var insert = /\\r+(.*)$/m.exec(txt)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, \"\\r\").replace(/^.*\\r/m, insert);\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n"],"names":["AssetNodeList","items","liveDataByNode","history","useHistory","Container","flex","alignItems","justifyContent","Spinner","purpose","gap","padding","horizontal","map","asset","AssetNodeWrapper","onClick","e","stopPropagation","push","assetDetailsPathForKey","assetKey","view","AssetNode","definition","inAssetCatalog","selected","liveData","toGraphId","id","styled","Box","AssetNodeDefinition","assetNode","upstream","downstream","partitionHealthData","usePartitionHealthData","metadataForAssetNode","assetMetadata","assetType","assetConfigSchema","configField","configType","repoAddress","buildRepoAddress","repository","name","location","AssetDefinedInMultipleReposNotice","loadedFromRepo","padded","direction","style","minWidth","border","side","width","color","Colors","vertical","DefinitionLocation","flexBasis","flexGrow","minHeight","Description","description","maxHeight","partitionDefinition","top","bottom","PartitionHealthSummary","data","length","to","Icon","ConfigTypeSchema","type","typesInScope","recursiveConfigTypes","DagsterType","AssetMetadata","wrap","lineHeight","jobNames","filter","jobName","isHiddenAssetGroupJob","PipelineReference","isJob","showIcon","pipelineName","pipelineHrefContext","OpNamesDisplay","isSourceAsset","marginTop","props","graphName","opNames","opCount","firstOp","displayNameForAssetKey","opPath","workspacePathFromAddress","size","ASSET_NODE_DEFINITION_FRAGMENT","gql","ASSET_NODE_CONFIG_FRAGMENT","ASSET_NODE_FRAGMENT","ASSET_NODE_OP_METADATA_FRAGMENT","AssetNodeInstigatorTag","schedules","flatMap","jobs","j","sensors","ScheduleOrSensorTag","showSwitch","ASSET_NODE_INSTIGATORS_FRAGMENT","SCHEDULE_SWITCH_FRAGMENT","SENSOR_SWITCH_FRAGMENT","LINEAGE_GRAPH_ZOOM_LEVEL","AssetNodeLineageGraph","assetGraphData","params","assetGraphId","React","highlighted","setHighlighted","useAssetLayout","layout","loading","viewportEl","current","lastZoomLevel","Number","getJSONForKey","autocenter","focus","SVGViewport","ref","r","undefined","interactor","graphWidth","graphHeight","height","onDoubleClick","maxZoom","maxAutocenterZoom","scale","SVGContainer","SVGSaveZoomLevel","edges","Object","values","groups","sort","a","b","group","bounds","key","AssetGroupNode","nodes","graphNode","path","JSON","parse","overflow","onMouseEnter","onMouseLeave","lineageScope","zoomToSVGBox","MINIMAL_SCALE","ForeignNode","window","localStorage","setItem","stringify","err","AssetNodeLineage","setParams","graphQueryItems","requestedDepth","maxDistances","calculateGraphDistances","maxDepth","Math","max","currentDepth","min","position","left","right","ButtonGroup","activeItems","Set","buttons","label","icon","lineageDepth","LineageDepthControl","value","onChange","depth","LaunchAssetExecutionButton","assetKeys","n","intent","context","Button","disabled","DepthHidesAssetsNotice","text","setText","commitText","next","TextInput","inputMode","marginLeft","textAlign","borderRadius","boxShadow","target","onKeyDown","onBlur","AssetView","useQueryPersistedState","queryResult","useQuery","ASSET_QUERY","variables","notifyOnNetworkStatusChange","assetOrError","previousData","__typename","materializations","assetMaterializations","lastMaterializedAt","timestamp","viewingMostRecent","asOf","token","tokenForAssetKey","defaultDepth","depthStr","repeat","useAssetGraphData","hideEdgesToNodesOutsideQuery","graphAssetKeys","graphData","graphId","useNeighborsFromGraph","useLiveDataForAssetKeys","liveResult","refreshState","useMergedRefresh","useQueryRefreshAtInterval","FIFTEEN_SECONDS","useDidLaunchEvent","refetch","isDefinitionLoaded","isUpstreamChanged","computeStatus","AssetComputeStatus","overflowY","AssetPageHeader","tags","Tag","RepositoryLink","groupName","BaseTag","fillColor","textColor","interactive","tabs","Tabs","selectedTabId","title","margin","QueryRefresh","HistoricalViewAlert","time","hasDefinition","AssetNoDefinitionState","AssetEvents","assetLastMaterializedAt","assetHasDefinedPartitions","paramsTimeWindowOnly","NonIdealState","LogType","Alert","fontWeight","Timestamp","ms","timeFormat","showSeconds","showTimezone","ButtonLink","underline","AssetsCatalogRoot","useTrackPageView","useParams","currentPath","split","x","decodeURIComponent","ASSETS_CATALOG_ROOT_QUERY","skip","useDocumentTitle","Page","ReloadAllButton","AssetsCatalogTable","prefixPath","setPrefixPath","__GLOBAL__","AssetsGroupsGlobalGraphRoot","WorkspaceContext","allRepos","visibleRepos","onChangeExplorerPath","mode","explorerPathToString","replace","onNavigateToForeignNode","node","fetchOptions","hideNodesMatching","some","repo","repositoryLocation","display","flexDirection","paddingBottom","PageHeader","marginBottom","AssetGraphExplorer","fetchOptionFilters","RepoFilterButton","options","preferAssetRendering","explodeComposites","explorerPath","explorerPathFromString","MAX_STREAMING_LOG_BYTES","ComputeLogContent","timeout","contentContainer","state","showScrollToTop","hideWarning","setState","clearTimeout","scheduleHideWarning","setTimeout","cancelHideWarning","onScrollUp","onScrollDown","_position","scrollToTop","this","ScrollToast","ScrollToTop","onMouseOver","onMouseOut","Group","spacing","logData","isLoading","isVisible","downloadUrl","content","isTruncated","TextEncoder","encode","shouldTruncate","nextLine","indexOf","truncated","slice","warning","FileWarning","href","download","FileContainer","renderScrollToTop","FileContent","RelativeContainer","LogContent","isSelected","LoadingContainer","FileFooter","COMPUTE_LOG_CONTENT_FRAGMENT","ScrollContainer","container","lastScroll","onScroll","scrollHeight","scrollTop","offsetHeight","scrollToBottom","addEventListener","_props","_state","shouldScroll","className","outline","tabIndex","ContentContainer","LineNumbers","Content","SolarizedColors","linkify","useClasses","matches","match","count","LineNumberContainer","Array","from","_","i","String","createGlobalStyle","FontFamily","s","merge","cursor","reducer","action","stdout","stepKey","log","stderr","initialState","COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT","COMPUTE_LOGS_SUBSCRIPTION","ComputeLogPanel","runId","stepKeys","computeLogKey","ioType","setComputeLogUrl","rootServerURI","AppContext","dispatch","useSubscription","fetchPolicy","ComputeIOType","onSubscriptionData","subscriptionData","computeLogs","useComputeLogs","startsWith","resolveDownloadUrl","ContentWrapper","emptyCounts","DEBUG","INFO","WARNING","ERROR","CRITICAL","EVENT","queuedNodes","queued","ii","clientsideKey","counts","forEach","level","logNodeLevel","hasMore","useLogsProviderWithSubscription","client","useApolloClient","queue","syncPipelineStatusToApolloCache","status","local","readFragment","fragmentName","fragment","PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT","toWrite","RunStatus","canTerminate","writeFragment","throttledSetNodes","throttle","queuedLogs","queuedMessages","messages","lastLog","hasMorePastEvents","nextPipelineStatus","reversed","reverse","pipelineStatusFromMessages","PIPELINE_RUN_LOGS_SUBSCRIPTION","logs","pipelineRunLogs","requestAnimationFrame","allNodes","LogsProviderWithSubscription","children","LogsProviderWithQuery","RUN_LOGS_QUERY","limit","pollInterval","onCompleted","stopPolling","pipelineRunOrError","logsForRun","run","events","startPolling","LogsProvider","WebSocketContext","availability","RunFragments","compactFormatter","memoize","Intl","NumberFormat","navigator","language","compactDisplay","notation","ExecutionStateDot","IStepState","shown","highlight","fuseOptions","threshold","LogsFilterInput","suggestionProviders","inputRef","perProvider","reduce","accum","provider","fuse","Fuse","all","providerKeys","empty","buildSuggestions","queryString","keys","results","search","result","item","toLowerCase","includes","tokens","toLocaleLowerCase","trim","suggestions","onSelectSuggestion","suggestion","lastIndex","lastIndexOf","keep","useSuggestionsForString","numResults","highlightedResult","onInputChange","onSelect","onClear","Popover","isOpen","Results","ResultItem","isHighlight","FilterInput","placeholder","spellCheck","autoCorrect","onFocus","lastResult","preventDefault","rightElement","ClearButton","C","element","scrollIntoView","block","Item","onMouseDown","LogsToolbar","steps","metadata","onSetFilter","logType","onSetLogType","onSetComputeLogKey","computeLogUrl","structured","tooltip","StructuredLogToolbar","ComputeLogToolbar","resolveState","logCapture","every","logCaptureSteps","extractLogCaptureStepsFromLegacySteps","isValidStepSelection","logKeyText","logKey","captureInfo","pid","Select","itemRenderer","Menu","handleClick","active","modifiers","activeItem","filterable","onItemSelect","rightIcon","Tooltip","placement","DownloadLink","IconWrapper","copyIcon","setCopyIcon","logQueryString","logQuery","join","setQueryString","copyToClipboard","useCopyToClipboard","selectedStep","find","v","filterText","getRunFilterProviders","segments","NonMatchCheckbox","checked","hideNonMatches","event","currentTarget","LogLevel","num","enabled","levels","FilterLabel","$enabled","Checkbox","format","LogLabel","LogCount","DELIMITER","levelsToQuery","DefaultQuerystring","DefaultLogLevels","focusedTime","decodeRunPageFilters","qs","logValues","providers","sinceTime","tokenizedValueFromString","toUpperCase","encodeRunPageFilters","logQueryTokenStrings","Run","decode","defaults","logsFilter","setLogsFilter","queryKey","selection","selectionQuery","setSelectionQuery","runStatusFavicon","el","document","querySelector","previousHref","getAttribute","setAttribute","onShowStateDetails","errorNode","showCustomAlert","body","PythonErrorInfo","error","onSetSelectionQuery","query","RunContext","RunMetadataProvider","RunWithData","onSetLogsFilter","onLaunch","useJobReExecution","splitPanelContainer","queryLogType","setQueryLogType","setComputeLogKey","logTypeFromQuery","stepKeysJSON","runtimeGraph","executionPlan","toGraphQueryItems","selectionStepKeys","filterByQuery","logKeys","selectedLogKey","logsFilterStepKeys","onClickStep","evt","newSelected","index","filterForExactStep","shiftKey","k","splice","SplitPanelContainer","axis","identifier","firstInitialPercent","firstMinSize","first","GanttChart","GanttChartMode","toolbarActions","RunActionButtons","graph","onSetSelection","gantt","second","LogsContainer","lt","LogsScrollingTable","filterStepKeys","filterKey","RunRoot","RUN_ROOT_QUERY","partialRefetch","snapshotID","pipelineSnapshotId","repoMatch","useRepositoryForRun","isThisThingAJob","zIndex","fontFamily","fontSize","RunStatusTag","RunAssetKeyTags","assetKeysForRun","clickableTags","snapshotId","assets","startTime","interactionKind","RunDetails","TimestampDisplay","updateTime","endTime","fontVariantNumeric","formatElapsedTime","Date","now","RunById","RunListTabs","useQueryPersistedRunFilters","filterTokens","runsFilter","runsFilterForSearchTokens","RUN_TABS_COUNT_QUERY","queuedFilter","statuses","queuedStatuses","inProgressFilter","inProgressStatuses","queuedCount","inProgress","inProgressCount","selectedTab","useSelectedRunsTab","urlForStatus","tokensMinusStatus","statusTokens","runsPathWithFilters","TabLink","doneStatuses","pathname","useLocation","isEqual","RunsRoot","setFilterTokens","canSeeConfig","useCanSeeConfig","useCursorPaginatedQuery","nextCursorForResult","runs","pipelineRunsOrError","PAGE_SIZE","getResultArray","RUNS_ROOT_QUERY","pageSize","paginationProps","currentTab","staticStatusTags","partition","nonStatusTokens","setFilterTokensWithStatus","onAddTag","tokenAsString","tokenToString","enabledFilters","filters","mutableTokens","QueueDaemonAlert","Loading","allowStaleData","renderError","badRequest","networkError","statusCode","RunsFilterInput","message","StickyTableContainer","$top","RunTable","actionBarComponents","RUN_TABLE_RUN_FRAGMENT","PYTHON_ERROR_FRAGMENT","QUEUE_DAEMON_STATUS_QUERY","pageTitle","InstancePageContext","instance","daemonHealth","daemonStatus","required","healthy","ScheduledRunListRoot","SCHEDULER_INFO_QUERY","repositoriesOrError","SchedulerInfo","SchedulesNextTicks","repos","INSTANCE_HEALTH_FRAGMENT","REPOSITORY_SCHEDULES_FRAGMENT","SNAPSHOT_PARENT_QUERY","SnapshotNav","activeTab","explorerPathString","currentPipelineState","useActivePipelineForName","currentSnapshotID","pathComponent","workspacePipelinePathGuessRepo","minimal","pipelineSnapshotOrError","parentSnapshotId","tag","tab","SnapshotRoot","pipelinePath","PipelineRunsRoot","InstanceBackfills","queryData","INSTANCE_HEALTH_FOR_BACKFILLS_QUERY","BACKFILLS_QUERY","partitionBackfillsOrError","backfillId","InstanceTabs","backfillHealths","allDaemonStatuses","daemon","daemonType","isBackfillHealthy","rel","BackfillTable","backfills","BACKFILL_TABLE_FRAGMENT","InstanceConfigStyle","InstanceConfig","INSTANCE_CONFIG_QUERY","config","info","version","editorDidMount","editor","documentHash","hash","RegExp","getSearchCursor","findNext","markText","lineNumbers","theme","InstanceHealthPage","INSTANCE_HEALTH_QUERY","DaemonList","daemonStatuses","searchValue","InstanceOverviewPage","queryResultOverview","INSTANCE_OVERVIEW_INITIAL_QUERY","queryResultLastRuns","LAST_TEN_RUNS_PER_JOB_QUERY","lastTenRunsData","bucketed","failed","succeeded","neverRan","sortFn","aRun","bRun","localeCompare","workspaceOrError","locationEntries","locationEntry","locationOrLoadError","repositories","pipelines","pipeline","schedule","sensor","targets","t","failedStatuses","successStatuses","filteredJobs","searchToLower","filterJobs","lastTenRunsFlattened","flattened","makeJobKey","filteredJobsFlattened","jobList","filteredJobsWithRuns","appendRuns","jobItem","jobKey","matchingRuns","grow","RunTimelineSection","JobSection","heading","ONE_HOUR","validateHourWindow","setShown","useStateWithStorage","hourWindow","setHourWindow","nowRef","nowSecs","floor","range","LOOKAHEAD_HOURS","unvalidatedStart","unvalidatedEnd","start","end","timelineJobs","job","workspacePipelinePath","repoName","repoLocation","hrWindow","QueryfulRunTimeline","JobTable","OVERVIEW_JOB_FRAGMENT","RUN_TIME_FRAGMENT","REPOSITORY_INFO_FRAGMENT","SCHEDULE_FUTURE_TICKS_FRAGMENT","InstanceSchedules","INSTANCE_SCHEDULES_QUERY","AllSchedules","unloadableInstigationStatesOrError","unloadable","withSchedules","loadedSchedulesSection","buildRepoPath","SchedulesTable","unloadableSchedules","instigationType","InstigationType","unloadableSchedulesSection","Unloadable","scheduleStates","SCHEDULE_FRAGMENT","INSTIGATION_STATE_FRAGMENT","InstanceSensors","INSTANCE_SENSORS_QUERY","AllSensors","withSensors","sensorDefinitionsSection","SensorInfo","SensorsTable","unloadableSensorsSection","sensorStates","SENSOR_FRAGMENT","CodeLocationsPage","InstanceStatusRoot","fallback","render","InstanceRoot","main","scrollTo","MainContent","M","exact","healthTitle","flagNewWorkspace","useFeatureFlags","INSTANCE_CONFIG_HAS_INFO","hasInfo","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","prototype","ANSI_COLORS","Anser","TypeError","_classCallCheck","fg","bg","fg_truecolor","bg_truecolor","bright","txt","escapeForHtml","ansiToHtml","ansiToJson","ansiToText","PALETTE_COLORS","g","_r","_g","_b","_i","str","process","json","clearLine","markup","_this","raw_text_chunks","first_chunk","shift","test","color_chunks","chunk","processChunk","processChunkJson","unshift","remove_empty","c","isEmpty","use_classes","decoration","was_processed","nums","self","num_str","parseInt","isNaN","is_foreground","palette_index","klass","setupPalette","_this2","jsonChunk","styles","classes","render_data","fragments","hasOwnProperty","module","exports","__importDefault","mod","__esModule","__importStar","call","anser_1","require","escape_carriage_1","LINK_REGEX","convertBundleIntoReact","bundle","backgroundColor","createStyle","classNames","substring","createClass","createElement","words","word","input","escapeCarriageReturn","default","ansiToJSON","bind","base","exec","insert","findLongestString","arr","longest","escapeSingleLineSafe","res","escapeCarriageReturnSafe","idx","createAggregator","debounce","isObject","func","wait","leading","trailing"],"sourceRoot":""}