{"version":3,"file":"static/js/594.9522858a.chunk.js","mappings":"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","sources":["../../core/src/app/FallthroughRoot.tsx","../../ui/src/components/NonIdealState.tsx"],"sourcesContent":["import {Box, Colors, ExternalAnchorButton, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, Route, Switch, useLocation} from 'react-router-dom';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {DagsterRepoOption, WorkspaceContext} from '../workspace/WorkspaceContext';\nimport {workspacePath, workspacePipelinePath} from '../workspace/workspacePath';\n\nconst InstanceRedirect = () => {\n  const location = useLocation();\n  const path = `${location.pathname}${location.search}`;\n  return <Redirect to={`/instance${path}`} />;\n};\n\nexport const FallthroughRoot = () => {\n  return (\n    <Switch>\n      <Route path={['/runs/(.*)?', '/assets/(.*)?', '/scheduler']}>\n        <InstanceRedirect />\n      </Route>\n      <Route path=\"/home\">\n        <FinalRedirectOrLoadingRoot />\n      </Route>\n      <Route path=\"*\">\n        <FinalRedirectOrLoadingRoot />\n      </Route>\n    </Switch>\n  );\n};\n\nconst getVisibleJobs = (r: DagsterRepoOption) =>\n  r.repository.pipelines.filter((j) => !isHiddenAssetGroupJob(j.name));\n\nconst FinalRedirectOrLoadingRoot = () => {\n  const workspaceContext = React.useContext(WorkspaceContext);\n  const {allRepos, loading, locationEntries} = workspaceContext;\n\n  if (loading) {\n    return (\n      <Box flex={{direction: 'row', justifyContent: 'center'}} style={{paddingTop: '100px'}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 16}}>\n          <Spinner purpose=\"section\" />\n          <div style={{color: Colors.Gray600}}>Loading workspaceâ€¦</div>\n        </Box>\n      </Box>\n    );\n  }\n\n  // If we have location entries but no repos, we have no useful objects to show.\n  // Redirect to Workspace overview to surface relevant errors to the user.\n  if (locationEntries.length && allRepos.length === 0) {\n    return <Redirect to=\"/workspace\" />;\n  }\n\n  const reposWithVisibleJobs = allRepos.filter((r) => getVisibleJobs(r).length > 0);\n\n  // If we have no repos with jobs, see if we have an asset group and route to it.\n  if (reposWithVisibleJobs.length === 0) {\n    const repoWithAssetGroup = allRepos.find((r) => r.repository.assetGroups.length);\n    if (repoWithAssetGroup) {\n      return (\n        <Redirect\n          to={workspacePath(\n            repoWithAssetGroup.repository.name,\n            repoWithAssetGroup.repositoryLocation.name,\n            `/asset-groups/${repoWithAssetGroup.repository.assetGroups[0].groupName}`,\n          )}\n        />\n      );\n    }\n  }\n\n  // If we have exactly one repo with one job, route to the job overview\n  if (reposWithVisibleJobs.length === 1 && getVisibleJobs(reposWithVisibleJobs[0]).length === 1) {\n    const repo = reposWithVisibleJobs[0];\n    const job = getVisibleJobs(repo)[0];\n    return (\n      <Redirect\n        to={workspacePipelinePath({\n          repoName: repo.repository.name,\n          repoLocation: repo.repositoryLocation.name,\n          pipelineName: job.name,\n          isJob: job.isJob,\n        })}\n      />\n    );\n  }\n\n  // If we have more than one repo with a job, route to the instance overview\n  if (reposWithVisibleJobs.length > 0) {\n    return <Redirect to=\"/instance\" />;\n  }\n\n  const repoWithNoJob = allRepos[0];\n\n  return (\n    <Box padding={{vertical: 64}}>\n      <NonIdealState\n        icon=\"no-results\"\n        title={repoWithNoJob ? 'No jobs' : 'No repositories'}\n        description={\n          repoWithNoJob\n            ? 'Your repository is loaded, but no jobs were found.'\n            : 'Add a repository to get started.'\n        }\n        action={\n          <ExternalAnchorButton href=\"https://docs.dagster.io/getting-started\">\n            View documentation\n          </ExternalAnchorButton>\n        }\n      />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default FallthroughRoot;\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      )}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["InstanceRedirect","location","useLocation","path","pathname","search","to","FallthroughRoot","FinalRedirectOrLoadingRoot","getVisibleJobs","r","repository","pipelines","filter","j","isHiddenAssetGroupJob","name","workspaceContext","React","WorkspaceContext","allRepos","loading","locationEntries","flex","direction","justifyContent","style","paddingTop","alignItems","gap","purpose","color","Colors","length","reposWithVisibleJobs","repoWithAssetGroup","find","assetGroups","workspacePath","repositoryLocation","groupName","repo","job","workspacePipelinePath","repoName","repoLocation","pipelineName","isJob","repoWithNoJob","padding","vertical","icon","title","description","action","href","NonIdealState","shrinkable","singleContentElement","Boolean","background","margin","borderRadius","width","maxWidth","size"],"sourceRoot":""}